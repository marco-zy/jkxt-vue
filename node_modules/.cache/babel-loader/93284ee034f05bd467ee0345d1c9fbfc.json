{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-baidu-map\\components\\extra\\MarkerClusterer.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-baidu-map\\components\\extra\\MarkerClusterer.vue","mtime":1681694602000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\babel.config.js","mtime":1593951026000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport MarkerClusterer from 'bmaplib.markerclusterer';\nimport { createSize } from \"../base/factory.js\";\nimport commonMixin from \"../base/mixins/common.js\";\nexport default {\n  name: 'bml-marker-clusterer',\n  mixins: [commonMixin('markerClusterer')],\n  props: {\n    gridSize: {\n      type: Object\n    },\n    maxZoom: {\n      type: Number\n    },\n    minClusterSize: {\n      type: Number\n    },\n    styles: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    averageCenter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    gridSize: {\n      handler: function handler(val) {\n        var BMap = this.BMap,\n          originInstance = this.originInstance;\n        originInstance.setGridSize(BMap, val.map);\n      },\n      deep: true\n    },\n    maxZoom: function maxZoom(val) {\n      var originInstance = this.originInstance;\n      originInstance.setMaxZoom(val);\n    },\n    minClusterSize: {\n      handler: function handler(val) {\n        var BMap = this.BMap,\n          originInstance = this.originInstance;\n        originInstance.setMinClusterSize(createSize(BMap, val));\n      },\n      deep: true\n    },\n    styles: {\n      handler: function handler(val) {\n        var BMap = this.BMap,\n          originInstance = this.originInstance;\n        var obj = JSON.parse(JSON.stringify(val)).map(function (item) {\n          item.size = item.size && createSize(BMap, item.size);\n          return item;\n        });\n        originInstance.setStyles(obj);\n      },\n      deep: true\n    },\n    averageCenter: function averageCenter(val) {\n      this.reload();\n    }\n  },\n  methods: {\n    load: function load() {\n      var _this = this;\n      var BMap = this.BMap,\n        map = this.map,\n        gridSize = this.gridSize,\n        minClusterSize = this.minClusterSize,\n        maxZoom = this.maxZoom,\n        styles = this.styles,\n        averageCenter = this.averageCenter;\n      this.originInstance = new MarkerClusterer(map, {\n        gridSize: gridSize && createSize(BMap, gridSize),\n        maxZoom: maxZoom,\n        minClusterSize: minClusterSize && createSize(BMap, minClusterSize),\n        styles: styles.map(function (item) {\n          item.size = createSize(BMap, item.size);\n          return item;\n        }),\n        isAverageCenter: averageCenter\n      });\n      this.$nextTick(function () {\n        var markers = _this.$children.map(function (inst) {\n          return inst.originInstance;\n        }).filter(function (marker) {\n          return marker instanceof BMap.Marker;\n        });\n        _this.originInstance.addMarkers(markers);\n      });\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    this.preventChildrenRender = true;\n  }\n};",{"version":3,"names":["MarkerClusterer","createSize","commonMixin","name","mixins","props","gridSize","type","Object","maxZoom","Number","minClusterSize","styles","Array","default","_default","averageCenter","Boolean","watch","handler","val","BMap","originInstance","setGridSize","map","deep","setMaxZoom","setMinClusterSize","obj","JSON","parse","stringify","item","size","setStyles","reload","methods","load","_this","isAverageCenter","$nextTick","markers","$children","inst","filter","marker","Marker","addMarkers","beforeCreate","preventChildrenRender"],"sources":["node_modules/vue-baidu-map/components/extra/MarkerClusterer.vue"],"sourcesContent":["<template>\n<span>\n  <slot></slot>\n</span>\n</template>\n\n<script>\nimport MarkerClusterer from 'bmaplib.markerclusterer'\nimport {createSize} from '../base/factory.js'\nimport commonMixin from '../base/mixins/common.js'\n\nexport default {\n  name: 'bml-marker-clusterer',\n  mixins: [commonMixin('markerClusterer')],\n  props: {\n    gridSize: {\n      type: Object\n    },\n    maxZoom: {\n      type: Number\n    },\n    minClusterSize: {\n      type: Number\n    },\n    styles: {\n      type: Array,\n      default () {\n        return []\n      }\n    },\n    averageCenter: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    gridSize: {\n      handler (val) {\n        const {BMap, originInstance} = this\n        originInstance.setGridSize(BMap, val.map)\n      },\n      deep: true\n    },\n    maxZoom (val) {\n      const {originInstance} = this\n      originInstance.setMaxZoom(val)\n    },\n    minClusterSize: {\n      handler (val) {\n        const {BMap, originInstance} = this\n        originInstance.setMinClusterSize(createSize(BMap, val))\n      },\n      deep: true\n    },\n    styles: {\n      handler (val) {\n        const {BMap, originInstance} = this\n        const obj = JSON.parse(JSON.stringify(val)).map(item => {\n          item.size = item.size && createSize(BMap, item.size)\n          return item\n        })\n        originInstance.setStyles(obj)\n      },\n      deep: true\n    },\n    averageCenter (val) {\n      this.reload()\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, gridSize, minClusterSize, maxZoom, styles, averageCenter} = this\n      this.originInstance = new MarkerClusterer(map, {\n        gridSize: gridSize && createSize(BMap, gridSize),\n        maxZoom,\n        minClusterSize: minClusterSize && createSize(BMap, minClusterSize),\n        styles: styles.map(item => {\n          item.size = createSize(BMap, item.size)\n          return item\n        }),\n        isAverageCenter: averageCenter\n      })\n      this.$nextTick(() => {\n        const markers = this.$children.map(inst => inst.originInstance).filter(marker => marker instanceof BMap.Marker)\n        this.originInstance.addMarkers(markers)\n      })\n    }\n  },\n  beforeCreate () {\n    this.preventChildrenRender = true\n  }\n}\n</script>\n"],"mappings":";AAOA,OAAAA,eAAA;AACA,SAAAC,UAAA;AACA,OAAAC,WAAA;AAEA;EACAC,IAAA;EACAC,MAAA,GAAAF,WAAA;EACAG,KAAA;IACAC,QAAA;MACAC,IAAA,EAAAC;IACA;IACAC,OAAA;MACAF,IAAA,EAAAG;IACA;IACAC,cAAA;MACAJ,IAAA,EAAAG;IACA;IACAE,MAAA;MACAL,IAAA,EAAAM,KAAA;MACAC,OAAA,WAAAC,SAAA;QACA;MACA;IACA;IACAC,aAAA;MACAT,IAAA,EAAAU,OAAA;MACAH,OAAA;IACA;EACA;EACAI,KAAA;IACAZ,QAAA;MACAa,OAAA,WAAAA,QAAAC,GAAA;QACA,IAAAC,IAAA,QAAAA,IAAA;UAAAC,cAAA,QAAAA,cAAA;QACAA,cAAA,CAAAC,WAAA,CAAAF,IAAA,EAAAD,GAAA,CAAAI,GAAA;MACA;MACAC,IAAA;IACA;IACAhB,OAAA,WAAAA,QAAAW,GAAA;MACA,IAAAE,cAAA,QAAAA,cAAA;MACAA,cAAA,CAAAI,UAAA,CAAAN,GAAA;IACA;IACAT,cAAA;MACAQ,OAAA,WAAAA,QAAAC,GAAA;QACA,IAAAC,IAAA,QAAAA,IAAA;UAAAC,cAAA,QAAAA,cAAA;QACAA,cAAA,CAAAK,iBAAA,CAAA1B,UAAA,CAAAoB,IAAA,EAAAD,GAAA;MACA;MACAK,IAAA;IACA;IACAb,MAAA;MACAO,OAAA,WAAAA,QAAAC,GAAA;QACA,IAAAC,IAAA,QAAAA,IAAA;UAAAC,cAAA,QAAAA,cAAA;QACA,IAAAM,GAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,CAAAX,GAAA,GAAAI,GAAA,WAAAQ,IAAA;UACAA,IAAA,CAAAC,IAAA,GAAAD,IAAA,CAAAC,IAAA,IAAAhC,UAAA,CAAAoB,IAAA,EAAAW,IAAA,CAAAC,IAAA;UACA,OAAAD,IAAA;QACA;QACAV,cAAA,CAAAY,SAAA,CAAAN,GAAA;MACA;MACAH,IAAA;IACA;IACAT,aAAA,WAAAA,cAAAI,GAAA;MACA,KAAAe,MAAA;IACA;EACA;EACAC,OAAA;IACAC,IAAA,WAAAA,KAAA;MAAA,IAAAC,KAAA;MACA,IAAAjB,IAAA,QAAAA,IAAA;QAAAG,GAAA,QAAAA,GAAA;QAAAlB,QAAA,QAAAA,QAAA;QAAAK,cAAA,QAAAA,cAAA;QAAAF,OAAA,QAAAA,OAAA;QAAAG,MAAA,QAAAA,MAAA;QAAAI,aAAA,QAAAA,aAAA;MACA,KAAAM,cAAA,OAAAtB,eAAA,CAAAwB,GAAA;QACAlB,QAAA,EAAAA,QAAA,IAAAL,UAAA,CAAAoB,IAAA,EAAAf,QAAA;QACAG,OAAA,EAAAA,OAAA;QACAE,cAAA,EAAAA,cAAA,IAAAV,UAAA,CAAAoB,IAAA,EAAAV,cAAA;QACAC,MAAA,EAAAA,MAAA,CAAAY,GAAA,WAAAQ,IAAA;UACAA,IAAA,CAAAC,IAAA,GAAAhC,UAAA,CAAAoB,IAAA,EAAAW,IAAA,CAAAC,IAAA;UACA,OAAAD,IAAA;QACA;QACAO,eAAA,EAAAvB;MACA;MACA,KAAAwB,SAAA;QACA,IAAAC,OAAA,GAAAH,KAAA,CAAAI,SAAA,CAAAlB,GAAA,WAAAmB,IAAA;UAAA,OAAAA,IAAA,CAAArB,cAAA;QAAA,GAAAsB,MAAA,WAAAC,MAAA;UAAA,OAAAA,MAAA,YAAAxB,IAAA,CAAAyB,MAAA;QAAA;QACAR,KAAA,CAAAhB,cAAA,CAAAyB,UAAA,CAAAN,OAAA;MACA;IACA;EACA;EACAO,YAAA,WAAAA,aAAA;IACA,KAAAC,qBAAA;EACA;AACA"}]}
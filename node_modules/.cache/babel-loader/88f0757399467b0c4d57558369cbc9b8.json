{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\Mission.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\Mission.vue","mtime":1682931923390},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\babel.config.js","mtime":1593951026000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport { deleteT, updateData1 } from \"../../api/index\";\nimport { prolist } from \"../../api/index\";\nimport { missionSelect, insertT, selectdepartment, selectexecutor } from \"../../api/index\";\nexport default {\n  name: 'basetable',\n  data: function data() {\n    return {\n      query: {\n        executorName: '',\n        createDepartment: '',\n        status: '',\n        page: 1,\n        pagesize: 8\n      },\n      tableData: [],\n      multipleSelection: [],\n      multipleSelectionId: [],\n      //new\n      delList: [],\n      editVisible: false,\n      insertVisible: false,\n      pageTotal: 0,\n      form: {\n        executeTime: '',\n        finishTime: '',\n        status: '',\n        executor: ''\n      },\n      idx: -1,\n      id: -1,\n      testId: '',\n      formData: '',\n      searchData: [],\n      selectExecutor: \"\",\n      editId: '',\n      missionCount: '',\n      edit: {\n        status: '',\n        executorName: ''\n      },\n      //时间选择器数据\n      pickerOptions: {\n        shortcuts: [{\n          text: '今天',\n          onClick: function onClick(picker) {\n            picker.$emit('pick', new Date());\n          }\n        }, {\n          text: '昨天',\n          onClick: function onClick(picker) {\n            var date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24);\n            picker.$emit('pick', date);\n          }\n        }, {\n          text: '一周前',\n          onClick: function onClick(picker) {\n            var date = new Date();\n            date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', date);\n          }\n        }]\n      },\n      editTime: '',\n      editTime1: '',\n      insert: {\n        no: '',\n        name: '',\n        projectId: '',\n        createDepartment: '',\n        executor: '',\n        status: '',\n        deviceId: '',\n        insertTime: '',\n        insertTime1: ''\n      },\n      departmentlist: [],\n      executorlist: [],\n      projectlist: [],\n      //insert表单的规则\n      rules: {\n        no: [{\n          required: true,\n          message: '请输入任务编号',\n          trigger: 'blur'\n        }, {\n          required: true,\n          pattern: /^[1-9]\\d*$/,\n          message: '任务编号应为数字',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 8,\n          message: '长度在 1 到 8 个字符',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入任务名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 8,\n          message: '长度在 1 到 8 个字符',\n          trigger: 'blur'\n        }],\n        projectId: [{\n          required: true,\n          message: '请输入所属项目ID',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 8,\n          message: '长度在 1 到 8 个字符',\n          trigger: 'blur'\n        }],\n        createDepartment: [{\n          required: true,\n          message: '请输入发布单位',\n          trigger: 'change'\n        }],\n        executor: [{\n          required: true,\n          message: '请输入执行人',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 8,\n          message: '长度在 1 到 8 个字符',\n          trigger: 'blur'\n        }],\n        status: [{\n          required: true,\n          message: '请输入状态',\n          trigger: 'change'\n        }\n        // { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\n        ],\n\n        deviceId: [{\n          required: true,\n          message: '请输入关联设备ID',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 8,\n          message: '长度在 1 到 8 个字符',\n          trigger: 'blur'\n        }],\n        insertTime: [{\n          type: 'string',\n          message: '请选择执行时间',\n          trigger: 'change'\n        }],\n        insertTime1: [{\n          type: 'string',\n          message: '请选择完成时间',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getData();\n  },\n  methods: {\n    getpro: function getpro() {\n      var _this = this;\n      prolist().then(function (res) {\n        _this.projectlist = res;\n      });\n    },\n    getData: function getData() {\n      var _this2 = this;\n      missionSelect(this.query).then(function (res) {\n        _this2.tableData = res.list;\n        _this2.pageTotal = res.pageTotal; //|| 50;\n      });\n    },\n    getdepartment: function getdepartment() {\n      var _this3 = this;\n      selectdepartment().then(function (res) {\n        _this3.departmentlist = res;\n        //alert(this.departmentlist);\n      });\n    },\n    getexecutor: function getexecutor() {\n      var _this4 = this;\n      selectexecutor().then(function (res) {\n        _this4.executorlist = res;\n      });\n    },\n    all: function all() {\n      var _this5 = this;\n      this.$set(this.query, 'page', 1);\n      this.query.createDepartment = '';\n      this.query.executorName = '';\n      this.query.status = '';\n      missionSelect(this.query).then(function (res) {\n        _this5.tableData = res.list;\n        _this5.pageTotal = res.pageTotal; //|| 50;\n      });\n    },\n    // 触发搜索按钮this.query.status='';\n    handleSearch: function handleSearch() {\n      var _this6 = this;\n      this.$set(this.query, 'page', 1);\n      this.missionCount = 1;\n      missionSelect(this.query).then(function (res) {\n        _this6.tableData = res.list;\n        _this6.pageTotal = res.pageTotal; //去掉了 || 50;\n      });\n    },\n    selectPage: function (_selectPage) {\n      function selectPage() {\n        return _selectPage.apply(this, arguments);\n      }\n      selectPage.toString = function () {\n        return _selectPage.toString();\n      };\n      return selectPage;\n    }(function () {\n      var _this7 = this;\n      selectPage(0, 10).then(function (res) {\n        _this7.tableData = res.list;\n      });\n    }),\n    // 删除操作\n    handleDelete: function handleDelete(index, row, rowId) {\n      var _this8 = this;\n      // 二次确认删除\n      this.$confirm('确定要删除吗？', '提示', {\n        type: 'warning'\n      }).then(function () {\n        _this8.$message.success('删除成功');\n        _this8.tableData.splice(index, 1);\n        deleteT(rowId);\n      }).catch(function () {});\n    },\n    // 多选操作\n    handleSelectionChange: function handleSelectionChange(val) {\n      var _this9 = this;\n      //清空上一次的多选情况\n      //因为这一次可能有多选项被取消选中\n      this.multipleSelection = [];\n      this.multipleSelectionId = [];\n\n      //alert(index);\n\n      this.multipleSelection = val; //原始的\n      //alert(this.multipleSelection);\n\n      val.forEach(function (element) {\n        _this9.multipleSelectionId.push(element.id);\n      });\n    },\n    delAllSelection: function delAllSelection() {\n      var length = this.multipleSelectionId.length;\n      var str = '';\n      var str1 = '';\n      var num = length;\n      this.delList = this.delList.concat(this.multipleSelectionId);\n      //alert(this.delList);\n      for (var i = 0; i < length; i++) {\n        if (i != num - 1) {\n          str += this.multipleSelectionId[i] + ','; //str为ID\n          str1 += this.multipleSelection[i].missionNo + '、';\n        } else {\n          str += this.multipleSelectionId[i];\n          str1 += this.multipleSelection[i].missionNo;\n        }\n      }\n      deleteT(str);\n\n      //this.$message.error(`删除了${str}`);\n      this.$message.error(\"\\u5220\\u9664\\u4E86\\u4EFB\\u52A1\".concat(str1, \"\\uFF0C\\u5171\").concat(num, \"\\u6761\\u6570\\u636E\"));\n      //this.$message.error(`删除了`);\n\n      this.multipleSelection = [];\n    },\n    // 编辑操作\n    handleEdit: function handleEdit(index, row, id) {\n      //index 只是这条数据在前端中的数值\n      this.idx = index;\n      this.form = row;\n      this.editVisible = true;\n      this.editId = id;\n    },\n    // 保存编辑\n    saveEdit: function saveEdit(editId) {\n      this.editVisible = false;\n      this.$message.success(\"\\u4FEE\\u6539\\u7B2C \".concat(this.idx + 1, \" \\u884C\\u6210\\u529F\"));\n      this.$set(this.tableData, this.idx, this.form);\n      //updateData(editId,this.form.status,this.form.executorName,this.editTime,this.editTime1);\n\n      updateData1(this.form);\n\n      //打补丁，否则修改第二个信息的时候会显示第一次输入\n      this.editTime = '';\n      this.editTime1 = '';\n    },\n    handleInsert: function handleInsert() {\n      this.insertVisible = true;\n    },\n    submitForm: function submitForm(insertForm) {\n      var _this10 = this;\n      this.$refs[insertForm].validate(function (valid) {\n        if (valid) {\n          insertT(_this10.insert);\n          _this10.insertVisible = false;\n          _this10.insert = {};\n        } else {\n          //console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(insertForm) {\n      //重置表单内容\n      this.$refs[insertForm].resetFields();\n    },\n    // 分页导航\n    handlePageChange: function handlePageChange(val) {\n      this.$set(this.query, 'page', val);\n      this.getData();\n    }\n  }\n};",null]}
{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-baidu-map\\components\\overlays\\Marker.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-baidu-map\\components\\overlays\\Marker.vue","mtime":1681694602000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\babel.config.js","mtime":1593951026000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport commonMixin from \"../base/mixins/common.js\";\nimport bindEvents from \"../base/bindEvent.js\";\nimport { createLabel, createIcon, createPoint } from \"../base/factory.js\";\nexport default {\n  name: 'bm-marker',\n  mixins: [commonMixin('overlay')],\n  props: {\n    position: {},\n    offset: {},\n    icon: {},\n    massClear: {\n      type: Boolean,\n      default: true\n    },\n    dragging: {\n      type: Boolean,\n      default: false\n    },\n    clicking: {\n      type: Boolean,\n      default: true\n    },\n    raiseOnDrag: {\n      type: Boolean,\n      default: false\n    },\n    draggingCursor: {\n      type: String\n    },\n    rotation: {\n      type: Number\n    },\n    shadow: {\n      type: Object\n    },\n    title: {\n      type: String\n    },\n    label: {\n      type: Object\n    },\n    animation: {\n      type: String\n    },\n    top: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    'position.lng': function positionLng(val, oldVal) {\n      var BMap = this.BMap,\n        originInstance = this.originInstance,\n        position = this.position,\n        renderByParent = this.renderByParent,\n        $parent = this.$parent;\n      if (val !== oldVal && val >= -180 && val <= 180) {\n        originInstance.setPosition(createPoint(BMap, {\n          lng: val,\n          lat: position.lat\n        }));\n      }\n      renderByParent && $parent.reload();\n    },\n    'position.lat': function positionLat(val, oldVal) {\n      var BMap = this.BMap,\n        originInstance = this.originInstance,\n        position = this.position,\n        renderByParent = this.renderByParent,\n        $parent = this.$parent;\n      if (val !== oldVal && val >= -74 && val <= 74) {\n        originInstance.setPosition(createPoint(BMap, {\n          lng: position.lng,\n          lat: val\n        }));\n      }\n      renderByParent && $parent.reload();\n    },\n    'offset.width': function offsetWidth(val, oldVal) {\n      var BMap = this.BMap,\n        originInstance = this.originInstance;\n      if (val !== oldVal) {\n        originInstance.setOffset(new BMap.Size(val, this.offset.height));\n      }\n    },\n    'offset.height': function offsetHeight(val, oldVal) {\n      var BMap = this.BMap,\n        originInstance = this.originInstance;\n      if (val !== oldVal) {\n        originInstance.setOffset(new BMap.Size(this.offset.width, val));\n      }\n    },\n    icon: {\n      deep: true,\n      handler: function handler(val) {\n        var BMap = this.BMap,\n          originInstance = this.originInstance,\n          rotation = this.rotation;\n        originInstance && originInstance.setIcon(createIcon(BMap, val));\n        rotation && originInstance && originInstance.setRotation(rotation);\n      }\n    },\n    massClear: function massClear(val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear();\n    },\n    dragging: function dragging(val) {\n      val ? this.originInstance.enableDragging() : this.originInstance.disableDragging();\n    },\n    clicking: function clicking() {\n      this.reload();\n    },\n    raiseOnDrag: function raiseOnDrag() {\n      this.reload();\n    },\n    draggingCursor: function draggingCursor(val) {\n      this.originInstance.setDraggingCursor(val);\n    },\n    rotation: function rotation(val) {\n      this.originInstance.setRotation(val);\n    },\n    shadow: function shadow(val) {\n      this.originInstance.setShadow(val);\n    },\n    title: function title(val) {\n      this.originInstance.setTitle(val);\n    },\n    label: function label(val) {\n      this.reload();\n    },\n    animation: function animation(val) {\n      this.originInstance.setAnimation(global[val]);\n    },\n    top: function top(val) {\n      this.originInstance.setTop(val);\n    },\n    zIndex: function zIndex(val) {\n      this.originInstance.setZIndex(val);\n    }\n  },\n  methods: {\n    load: function load() {\n      var BMap = this.BMap,\n        map = this.map,\n        position = this.position,\n        offset = this.offset,\n        icon = this.icon,\n        massClear = this.massClear,\n        dragging = this.dragging,\n        clicking = this.clicking,\n        raiseOnDrag = this.raiseOnDrag,\n        draggingCursor = this.draggingCursor,\n        rotation = this.rotation,\n        shadow = this.shadow,\n        title = this.title,\n        label = this.label,\n        animation = this.animation,\n        top = this.top,\n        renderByParent = this.renderByParent,\n        $parent = this.$parent,\n        zIndex = this.zIndex;\n      var overlay = new BMap.Marker(new BMap.Point(position.lng, position.lat), {\n        offset: offset,\n        icon: icon && createIcon(BMap, icon),\n        enableMassClear: massClear,\n        enableDragging: dragging,\n        enableClicking: clicking,\n        raiseOnDrag: raiseOnDrag,\n        draggingCursor: draggingCursor,\n        rotation: rotation,\n        shadow: shadow,\n        title: title\n      });\n      this.originInstance = overlay;\n      label && overlay && overlay.setLabel(createLabel(BMap, label));\n      overlay.setTop(top);\n      overlay.setZIndex(zIndex);\n      bindEvents.call(this, overlay);\n      if (renderByParent) {\n        $parent.reload();\n      } else {\n        map.addOverlay(overlay);\n      }\n      overlay.setAnimation(global[animation]);\n    }\n  }\n};",{"version":3,"names":["commonMixin","bindEvents","createLabel","createIcon","createPoint","name","mixins","props","position","offset","icon","massClear","type","Boolean","default","dragging","clicking","raiseOnDrag","draggingCursor","String","rotation","Number","shadow","Object","title","label","animation","top","zIndex","watch","positionLng","val","oldVal","BMap","originInstance","renderByParent","$parent","setPosition","lng","lat","reload","positionLat","offsetWidth","setOffset","Size","height","offsetHeight","width","deep","handler","setIcon","setRotation","enableMassClear","disableMassClear","enableDragging","disableDragging","setDraggingCursor","setShadow","setTitle","setAnimation","global","setTop","setZIndex","methods","load","map","overlay","Marker","Point","enableClicking","setLabel","call","addOverlay"],"sources":["node_modules/vue-baidu-map/components/overlays/Marker.vue"],"sourcesContent":["<template>\n<div>\n  <slot></slot>\n</div>\n</template>\n\n<script>\nimport commonMixin from '../base/mixins/common.js'\nimport bindEvents from '../base/bindEvent.js'\nimport {createLabel, createIcon, createPoint} from '../base/factory.js'\n\nexport default {\n  name: 'bm-marker',\n  mixins: [commonMixin('overlay')],\n  props: {\n    position: {},\n    offset: {},\n    icon: {},\n    massClear: {\n      type: Boolean,\n      default: true\n    },\n    dragging: {\n      type: Boolean,\n      default: false\n    },\n    clicking: {\n      type: Boolean,\n      default: true\n    },\n    raiseOnDrag: {\n      type: Boolean,\n      default: false\n    },\n    draggingCursor: {\n      type: String\n    },\n    rotation: {\n      type: Number\n    },\n    shadow: {\n      type: Object\n    },\n    title: {\n      type: String\n    },\n    label: {\n      type: Object\n    },\n    animation: {\n      type: String\n    },\n    top: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n  watch: {\n    'position.lng' (val, oldVal) {\n      const {BMap, originInstance, position, renderByParent, $parent} = this\n      if (val !== oldVal && val >= -180 && val <= 180) {\n        originInstance.setPosition(createPoint(BMap, {lng: val, lat: position.lat}))\n      }\n      renderByParent && $parent.reload()\n    },\n    'position.lat' (val, oldVal) {\n      const {BMap, originInstance, position, renderByParent, $parent} = this\n      if (val !== oldVal && val >= -74 && val <= 74) {\n        originInstance.setPosition(createPoint(BMap, {lng: position.lng, lat: val}))\n      }\n      renderByParent && $parent.reload()\n    },\n    'offset.width' (val, oldVal) {\n      const {BMap, originInstance} = this\n      if (val !== oldVal) {\n        originInstance.setOffset(new BMap.Size(val, this.offset.height))\n      }\n    },\n    'offset.height' (val, oldVal) {\n      const {BMap, originInstance} = this\n      if (val !== oldVal) {\n        originInstance.setOffset(new BMap.Size(this.offset.width, val))\n      }\n    },\n    icon: {\n      deep: true,\n      handler (val) {\n        const {BMap, originInstance, rotation} = this\n        originInstance && originInstance.setIcon(createIcon(BMap, val))\n        rotation && originInstance && originInstance.setRotation(rotation)\n      }\n    },\n    massClear (val) {\n      val ? this.originInstance.enableMassClear() : this.originInstance.disableMassClear()\n    },\n    dragging (val) {\n      val ? this.originInstance.enableDragging() : this.originInstance.disableDragging()\n    },\n    clicking () {\n      this.reload()\n    },\n    raiseOnDrag () {\n      this.reload()\n    },\n    draggingCursor (val) {\n      this.originInstance.setDraggingCursor(val)\n    },\n    rotation (val) {\n      this.originInstance.setRotation(val)\n    },\n    shadow (val) {\n      this.originInstance.setShadow(val)\n    },\n    title (val) {\n      this.originInstance.setTitle(val)\n    },\n    label (val) {\n      this.reload()\n    },\n    animation (val) {\n      this.originInstance.setAnimation(global[val])\n    },\n    top (val) {\n      this.originInstance.setTop(val)\n    },\n    zIndex (val) {\n      this.originInstance.setZIndex(val)\n    }\n  },\n  methods: {\n    load () {\n      const {BMap, map, position, offset, icon, massClear, dragging, clicking, raiseOnDrag, draggingCursor, rotation, shadow, title, label, animation, top, renderByParent, $parent, zIndex} = this\n      const overlay = new BMap.Marker(new BMap.Point(position.lng, position.lat), {\n        offset,\n        icon: icon && createIcon(BMap, icon),\n        enableMassClear: massClear,\n        enableDragging: dragging,\n        enableClicking: clicking,\n        raiseOnDrag,\n        draggingCursor,\n        rotation,\n        shadow,\n        title\n      })\n      this.originInstance = overlay\n      label && overlay && overlay.setLabel(createLabel(BMap, label))\n      overlay.setTop(top)\n      overlay.setZIndex(zIndex)\n      bindEvents.call(this, overlay)\n      if (renderByParent) {\n        $parent.reload()\n      } else {\n        map.addOverlay(overlay)\n      }\n      overlay.setAnimation(global[animation])\n    }\n  }\n}\n</script>\n"],"mappings":"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"}]}
{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\thread-loader\\dist\\cjs.js!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\LiveStream.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\LiveStream.vue","mtime":1683272485979},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\babel.config.js","mtime":1593951026000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"E:/Java\\u9879\\u76EE/vue-manage-system-4.2.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { fetchData } from \"../../api/index\";\nimport { province, city, project, mission } from \"../../api/index\";\nimport HwCellPlayer from \"./HwCellPlayer.vue\";\nexport default {\n  name: 'LiveStream',\n  components: {\n    HwCellPlayer: HwCellPlayer\n  },\n  data: function data() {\n    return {\n      query: {\n        pageIndex: 1,\n        pageSize: 10\n      },\n      tableData: [],\n      multipleSelection: [],\n      delList: [],\n      editVisible: false,\n      pageTotal: 0,\n      form: {},\n      idx: -1,\n      id: -1,\n      num: 0,\n      cellCount: 4,\n      //默认从4开始\n\n      treeData1: '',\n      props: {\n        label: \"label\",\n        isLeaf: \"isLeaf\"\n      },\n      video: '../videos/01.mp4',\n      cellCountArr: [{\n        index: 1,\n        data: null,\n        isShow: false\n      }, {\n        index: 2,\n        data: null,\n        isShow: false\n      }, {\n        index: 3,\n        data: null,\n        isShow: false\n      }, {\n        index: 4,\n        data: null,\n        isShow: false\n      }],\n      iconArr: [\n      //1 2 3 4 6 9 16宫格 icon 样式\n      {\n        number: 1,\n        //必须是int（number） 类型 \n        name: 'el-icon-s-platform',\n        tips: '1画面'\n      }, {\n        number: 4,\n        //必须是int（number） 类型 \n        name: 'el-icon-menu',\n        tips: '4画面'\n      }, {\n        number: 9,\n        //必须是int（number） 类型 \n        name: 'el-icon-s-grid',\n        tips: '9画面'\n      }, {\n        number: 16,\n        //必须是int（number） 类型 \n        name: 'el-icon-s-grid',\n        tips: '16画面'\n      }]\n    };\n  },\n  created: function created() {\n    this.getData();\n    this.getprovince();\n  },\n  methods: {\n    // 获取 easy-mock 的模拟数据\n    getData: function getData() {\n      var _this = this;\n      fetchData(this.query).then(function (res) {\n        //alert(res);\n        console.log(res);\n        _this.tableData = res.list;\n        //this.tableData = res.list; /* 将获取数据中的list赋值给tabledata */\n        _this.pageTotal = res.pageTotal; //|| 50;\n      });\n    },\n    cellCountFn: function cellCountFn(number) {\n      this.cellCount = number;\n      this.cellCountArr.length = number;\n    },\n    handleNodeClick: function handleNodeClick(data) {\n      console.log(data);\n\n      //新增一个属性\n      if (data.level == \"province\") {\n        //alert(\"province\")\n\n        this.center = {};\n        this.center = data.label;\n        this.boundaryname = data.label;\n        this.zoom = 8;\n      } else if (data.level == \"city\") {\n        this.center = {};\n        this.center = data.label;\n        this.boundaryname = data.label;\n        this.zoom = 10;\n\n        //alert(\"city\")\n      } else if (data.level == \"project\") {\n        this.coordination.lat = data.lat;\n        this.coordination.lng = data.lng;\n        this.center = this.coordination;\n        this.zoom = 16;\n        //alert(\"project\")\n      }\n    },\n    loadNode: function loadNode(node, resolve) {\n      //如果展开第一级节点，从后台加载一级节点列表******省\n      if (node.level == 0) {\n        this.loadfirstnode(resolve);\n      }\n      //如果展开市节点，动态从后台加载下一级节点列表******市\n      if (node.level == 1) {\n        this.loadcitynode(node, resolve);\n      }\n      //如果展开项目节点，动态从后台加载下一级节点列表******项目\n      if (node.level == 2) {\n        this.loadprojectnode(node, resolve);\n      }\n      if (node.level == 3) {\n        this.loadmissionnode(node, resolve);\n      }\n    },\n    loadfirstnode: function () {\n      var _loadfirstnode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(resolve) {\n        var params, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              params = {\n                level: 0\n              };\n              _context.next = 3;\n              return province();\n            case 3:\n              res = _context.sent;\n              return _context.abrupt(\"return\", resolve(res));\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function loadfirstnode(_x) {\n        return _loadfirstnode.apply(this, arguments);\n      }\n      return loadfirstnode;\n    }(),\n    //市\n    loadcitynode: function () {\n      var _loadcitynode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(node, resolve) {\n        var params, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              params = {\n                province: node.label\n              };\n              _context2.next = 3;\n              return city(params);\n            case 3:\n              res = _context2.sent;\n              return _context2.abrupt(\"return\", resolve(res));\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function loadcitynode(_x2, _x3) {\n        return _loadcitynode.apply(this, arguments);\n      }\n      return loadcitynode;\n    }(),\n    //项目\n    loadprojectnode: function () {\n      var _loadprojectnode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(node, resolve) {\n        var params, res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              params = {\n                city: node.label\n              };\n              _context3.next = 3;\n              return project(params);\n            case 3:\n              res = _context3.sent;\n              return _context3.abrupt(\"return\", resolve(res));\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n      function loadprojectnode(_x4, _x5) {\n        return _loadprojectnode.apply(this, arguments);\n      }\n      return loadprojectnode;\n    }(),\n    loadmissionnode: function () {\n      var _loadmissionnode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(node, resolve) {\n        var params, res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              //alert(node.objId)\n              params = {\n                projectId: node.data.objId\n              };\n              _context4.next = 3;\n              return mission(params);\n            case 3:\n              res = _context4.sent;\n              return _context4.abrupt(\"return\", resolve(res));\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }));\n      function loadmissionnode(_x6, _x7) {\n        return _loadmissionnode.apply(this, arguments);\n      }\n      return loadmissionnode;\n    }(),\n    //设备\n    loaddevicenode: function () {\n      var _loaddevicenode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(node, resolve) {\n        var params, res;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              params = {\n                city: node.label\n              };\n              _context5.next = 3;\n              return project(params);\n            case 3:\n              res = _context5.sent;\n              return _context5.abrupt(\"return\", resolve(res));\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }));\n      function loaddevicenode(_x8, _x9) {\n        return _loaddevicenode.apply(this, arguments);\n      }\n      return loaddevicenode;\n    }(),\n    getprovince: function getprovince() {\n      var _this2 = this;\n      province().then(function (res) {\n        _this2.treeData1 = res;\n        //alert(this.treeData1);\n      });\n    },\n    proselect: function proselect() {\n      var _this3 = this;\n      dashproselect().then(function (res) {\n        return [_this3.markers = res];\n      });\n    }\n  },\n  computed: {\n    // 计算类样式属性\n    cellClass: function cellClass() {\n      return function (index) {\n        switch (this.cellCount) {\n          case 1:\n            return ['cell-player-1'];\n          case 4:\n            return ['cell-player-4'];\n          case 9:\n            return ['cell-player-9'];\n          case 16:\n            return ['cell-player-16'];\n          default:\n            break;\n        }\n      };\n    }\n  }\n};",null]}
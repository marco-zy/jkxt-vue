{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\User.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\User.vue","mtime":1683201954920},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["\r\n\r\n\r\n//import {deleteT,updateData1} from '../../api/index';\r\nimport {userDelete,userinsert,userupdate} from '../../api/index';\r\nimport {prolist,userselect,selectname} from '../../api/index';\r\nimport {postTest} from '../../api/index';\r\n\r\n\r\nexport default {\r\n    name: 'basetable',\r\n    data() {\r\n        return {\r\n            query: {\r\n                userName:'',\r\n                authority:'',\r\n                status:'',\r\n                page:1,\r\n                pagesize:8\r\n            },\r\n            tableData: [],\r\n            multipleSelection: [],\r\n            multipleSelectionId: [],//new\r\n            delList: [],\r\n            editVisible: false,\r\n            insertVisible: false,\r\n            pageTotal: 0,\r\n            form: {\r\n                userName:'',\r\n                userNo:'',\r\n                password:'',\r\n                authority:'',\r\n                status:'',\r\n                phone:''\r\n            },\r\n            idx: -1,\r\n            id: -1,\r\n            testId: '',\r\n            formData: '',\r\n            searchData:[],\r\n            selectExecutor:\"\",\r\n            editId:'',\r\n            missionCount:'',\r\n            edit:{\r\n                status:'',\r\n                executorName:''\r\n            },\r\n            //时间选择器数据\r\n            pickerOptions: {\r\n                shortcuts: [{\r\n                    text: '今天',\r\n                    onClick(picker) {\r\n                    picker.$emit('pick', new Date());\r\n                    }\r\n                }, \r\n                {\r\n                    text: '昨天',\r\n                    onClick(picker) {\r\n                    const date = new Date();\r\n                    date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n                    picker.$emit('pick', date);\r\n                    }\r\n                }, \r\n                {\r\n                    text: '一周前',\r\n                    onClick(picker) {\r\n                    const date = new Date();\r\n                    date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n                    picker.$emit('pick', date);\r\n                    }\r\n                }]\r\n            },\r\n            editTime:'',\r\n            editTime1:'',\r\n            insert:{\r\n                \r\n                userNo:'',\r\n                userName:'',\r\n                password:'',\r\n                authority:'',\r\n                status:'',\r\n                image:'',\r\n                phone:''\r\n\r\n            },\r\n            namelist:[],\r\n\r\n            \r\n            //insert表单的规则\r\n            //props和rules名字要与变量的名字保持一致\r\n            rules: {\r\n                \r\n                userNo:[\r\n                        { required: true, message: '请输入用户编号', trigger: 'blur' },\r\n                        { required: true, pattern: /^[1-9]\\d*$/, message: '用户编号应为数字', trigger: 'blur' },\r\n                        { min: 1, max:5, message: '长度应在 1 到 5 个字符', trigger: 'blur' }\r\n                ],\r\n                userName:[\r\n                        { required: true, message: '请输入用户姓名', trigger: 'blur' },\r\n                        { min: 1, max: 15, message: '长度在 1 到 15 个字符', trigger: 'blur' }\r\n                ],\r\n                password:[\r\n                        { required: true, message: '请输入密码', trigger: 'blur' },\r\n                        { min: 6, max:20, message: '长度应在 6 到 20 个字符', trigger: 'blur' }\r\n                ],\r\n                authority:[\r\n                    { required: true, message: '请选择权限', trigger: 'change' },\r\n                    \r\n                ],\r\n                status:[\r\n                    { required: true, message: '请选择状态', trigger: 'change' },\r\n                    // { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                image:[\r\n                    { required: true, message: '请输入图片地址', trigger: 'blur' },\r\n                ],\r\n\r\n                phone:[\r\n                    { required: true, message: '请输入电话', trigger: 'blur' },\r\n                    { required: true, pattern: /^[1-9]\\d*$/, message: '电话号码应为数字', trigger: 'blur' },\r\n                    // { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                                \r\n                }\r\n\r\n            };\r\n\r\n    },\r\n    created() {\r\n        this.getData();\r\n                \r\n    },\r\n    methods: {\r\n\r\n        // post(){\r\n        //     postTest().then(res=>{\r\n        //         console.log(res);\r\n        //     })\r\n\r\n        // },\r\n\r\n        getpro(){\r\n\r\n            prolist().then(res=>{\r\n                this.projectlist=res;\r\n            })\r\n        },\r\n        \r\n        getData() {\r\n\r\n            userselect(this.query).then(res =>{\r\n                this.tableData=res.list;\r\n                this.pageTotal = res.pageTotal ;//|| 50;\r\n            })\r\n\r\n        },\r\n        getdepartment(){\r\n\r\n            selectname().then(res=>{\r\n                this.departmentlist=res;\r\n                //alert(this.departmentlist);\r\n            })\r\n        },\r\n        getname(){\r\n            selectname().then(res=>{\r\n                this.namelist=res;\r\n            })\r\n        },\r\n        all(){\r\n            \r\n                this.$set(this.query, 'page', 1);\r\n                this.query.authority='';\r\n                this.query.userName='';\r\n                this.query.status='';\r\n                userselect(this.query).then(res =>{\r\n                    this.tableData=res.list;\r\n                    this.pageTotal = res.pageTotal ;//|| 50;\r\n                })\r\n        },\r\n        // 触发搜索按钮this.query.status='';\r\n        handleSearch() {\r\n            this.$set(this.query, 'page', 1);\r\n                this.missionCount = 1;\r\n                userselect(this.query).then(res =>{\r\n                this.tableData=res.list;\r\n                this.pageTotal = res.pageTotal; //去掉了 || 50;\r\n            })\r\n        },\r\n        selectPage(){\r\n            selectPage(0,10).then(res=>{\r\n                this.tableData = res.list;\r\n            });\r\n        },\r\n        // 删除操作\r\n        handleDelete(index, row, rowId) {\r\n            // 二次确认删除\r\n            this.$confirm('确定要删除吗？', '提示', {\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n                    this.$message.success('删除成功');\r\n                    this.tableData.splice(index, 1);\r\n\r\n                    userDelete(rowId);\r\n\r\n                })\r\n                .catch(() => {});\r\n        },\r\n        // 多选操作\r\n        handleSelectionChange(val) {\r\n\r\n            //清空上一次的多选情况\r\n            //因为这一次可能有多选项被取消选中\r\n            this.multipleSelection = [];\r\n            this.multipleSelectionId = [];       \r\n\r\n            //alert(index);\r\n           \r\n            this.multipleSelection = val;//原始的\r\n            //alert(this.multipleSelection);\r\n\r\n            val.forEach((element) => {\r\n                this.multipleSelectionId.push(element.id);\r\n            });\r\n                                 \r\n        },\r\n        delAllSelection() {\r\n\r\n            const length = this.multipleSelectionId.length;\r\n            let str = '';\r\n            let str1 = '';\r\n            let num = length;\r\n            this.delList = this.delList.concat(this.multipleSelectionId);\r\n            //alert(this.delList);\r\n            for (let i = 0; i < length; i++) {\r\n                if(i != num - 1){\r\n                    str += this.multipleSelectionId[i] + ',';//str为ID\r\n                    str1 +=this.multipleSelection[i].userNo +'、';\r\n                }\r\n                else{\r\n                    str += this.multipleSelectionId[i];\r\n                    str1 +=this.multipleSelection[i].userNo;\r\n                }\r\n            }\r\n            userDelete(str);\r\n\r\n            //this.$message.error(`删除了${str}`);\r\n            this.$message.error(`删除了用户${str1}，共${num}条数据`);\r\n            //this.$message.error(`删除了`);\r\n\r\n            this.multipleSelection = [];\r\n\r\n\r\n        },\r\n        // 编辑操作\r\n        handleEdit(index, row, id) {\r\n            //index 只是这条数据在前端中的数值\r\n            this.idx = index;\r\n            this.form = row;\r\n            //alert(this.form.phone)\r\n            this.editVisible = true;\r\n            this.editId=id;\r\n        },\r\n\r\n        \r\n        // 保存编辑\r\n        saveEdit(editId) {\r\n\r\n            this.editVisible = false;\r\n            this.$message.success(`修改第 ${this.idx + 1} 行成功`);\r\n            this.$set(this.tableData, this.idx, this.form);\r\n\r\n            userupdate(this.form);\r\n            //打补丁，否则修改第二个信息的时候会显示第一次输入                   \r\n        },\r\n\r\n        handleInsert() {\r\n           \r\n            this.insertVisible = true;\r\n\r\n        },\r\n        \r\n        submitForm(insertForm) {\r\n        this.$refs[insertForm].validate((valid) => {\r\n            if (valid) {\r\n                \r\n                userinsert(this.insert);\r\n                \r\n                this.insertVisible = false;\r\n                this.insert={};\r\n\r\n            } else {\r\n                //console.log('error submit!!');\r\n                return false;\r\n            }\r\n            });\r\n        },\r\n        resetForm(insertForm) { //重置表单内容\r\n            this.$refs[insertForm].resetFields();\r\n\r\n        },\r\n        // 分页导航\r\n        handlePageChange(val) {\r\n            this.$set(this.query, 'page', val);\r\n            this.getData();\r\n        },\r\n\r\n    }\r\n};\r\n",null]}
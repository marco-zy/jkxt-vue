{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\Project.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\Project.vue","mtime":1683278056404},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["\r\n\r\nlet geoc = null;\r\n\r\nimport {BaiduMap,BmNavigation,BmView,BmGeolocation,BmCityList} from 'vue-baidu-map'\r\nimport {proupdate, proDelete,devnotbound} from '../../api/index';\r\nimport {projectSelect,proinsertT,selectprovince,selectcity,selectmanager} from '../../api/index';\r\nimport {devbound} from '../../api/index'\r\n\r\n\r\nexport default {\r\n    \r\n    name: 'basetable',\r\n    components: {\r\n      BaiduMap,\r\n      BmNavigation,\r\n      BmView,\r\n      BmGeolocation,\r\n      BmCityList\r\n    },\r\n    \r\n    ///\r\n    data() {\r\n        return {\r\n            ///\r\n\r\n            center: {lng: 117.063035, lat: 36.672767},\r\n            zoom: 12,\r\n            locData:{\r\n            longitude:'',\r\n            latitude:'',\r\n            address:'',\r\n            city:'',\r\n            province:''\r\n            },\r\n            clientHeight:document.documentElement.clientHeight-600, // 屏幕高度 \r\n            //clientHeight:document.documentElement.clientHeight-450, // 屏幕高度\r\n            iconUrl:'http://api.map.baidu.com/img/markers.png',\r\n            search:'',\r\n            searchOption:[],\r\n            loading:false,\r\n            keyword:'',\r\n            ///\r\n\r\n            query: {\r\n                manager:'',\r\n                province:'',\r\n                city:'',\r\n                status:'',\r\n                page:1,\r\n                pagesize:8,\r\n                deviceName:''\r\n            },\r\n            tableData: [],\r\n            multipleSelection: [],\r\n            multipleSelectionId: [],\r\n            delList: [],\r\n            editVisible: false,\r\n            insertVisible: false,\r\n            positionVisible:false,\r\n            pageTotal: 0,\r\n            form: {\r\n                id:'',\r\n                projectName:'',\r\n                startTime:'',\r\n                finishTime:'',\r\n                manager:'',\r\n                status:'',\r\n            },\r\n\r\n            temp: {\r\n                id:'',\r\n                projectName:'',\r\n                startTime:'',\r\n                finishTime:'',\r\n                manager:'',\r\n                status:'',\r\n            },\r\n\r\n            idx: -1,\r\n            id: -1,\r\n            testId: '',\r\n            formData: '',\r\n            searchData:[],\r\n            selectExecutor:\"\",\r\n            editId:'',\r\n            missionCount:'',\r\n            edit:{\r\n                status:'',\r\n                executorName:''\r\n            },\r\n            //时间选择器数据\r\n            pickerOptions: {\r\n                shortcuts: [{\r\n                    text: '今天',\r\n                    onClick(picker) {\r\n                    picker.$emit('pick', new Date());\r\n                    }\r\n                }, \r\n                {\r\n                    text: '昨天',\r\n                    onClick(picker) {\r\n                    const date = new Date();\r\n                    date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n                    picker.$emit('pick', date);\r\n                    }\r\n                }, \r\n                {\r\n                    text: '一周前',\r\n                    onClick(picker) {\r\n                    const date = new Date();\r\n                    date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n                    picker.$emit('pick', date);\r\n                    }\r\n                }]\r\n            },\r\n            editTime:'',\r\n            editTime1:'',\r\n            insert:{\r\n                projectNo:'',\r\n                projectName:'',\r\n                startTime:'',\r\n                finishTime:'',\r\n                manager:'',\r\n                province:'',\r\n                city:'',\r\n                lng:'',\r\n                lat:'', \r\n                status:'',\r\n                address:'',\r\n                deviceid:''\r\n                \r\n            },\r\n            provincelist:[],\r\n            citylist:[],\r\n            managerlist:[],\r\n            devlist:[],\r\n            flag:'',\r\n            \r\n            //insert表单的规则\r\n            rules: {\r\n                projectNo: [\r\n                        { required: true, message: '请输入项目编号', trigger: 'blur' },\r\n                        { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                projectName:[\r\n                        { required: true, message: '请输入项目名称', trigger: 'blur' },\r\n                        { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                projectId:[\r\n                        { required: true, message: '请输入所属项目ID', trigger: 'blur' },\r\n                        { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                manager:[\r\n                    { required: true, message: '请输入负责人', trigger: 'blur' },\r\n                    { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                status:[\r\n                    { required: true, message: '请选择状态', trigger: 'change' },\r\n                    // { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                province:[\r\n                    { required: true, message: '请输入所属省', trigger: 'blur' },\r\n                    { min: 1, max: 8, message: '长度在 1 到 8 个字符', trigger: 'blur' }\r\n                ],\r\n                city:[\r\n                    { required: true, message: '请输入所属市', trigger: 'blur' },\r\n                    { min: 1, max: 15, message: '长度在 1 到 15 个字符', trigger: 'blur' }\r\n                ],\r\n                lng:[\r\n                    { required: true, message: '请输入经度', trigger: 'blur' },\r\n                    // { min: 1, max: 10, message: '长度在 1 到 10 个字符', trigger: 'blur' }\r\n                ],\r\n                lat:[\r\n                    { required: true, message: '请输入纬度', trigger: 'blur' },\r\n                    // { min: 1, max: 10, message: '长度在 1 到 10 个字符', trigger: 'blur' }\r\n                ],\r\n                insertTime:[\r\n                    { type: 'string', message: '请选择执行时间', trigger: 'change' }\r\n                ],\r\n                insertTime1:[\r\n                    { type: 'string', message: '请选择完成时间', trigger: 'change' }\r\n                ]\r\n                                \r\n                }\r\n\r\n            };\r\n\r\n    },\r\n    created() {\r\n        this.getData();\r\n    },\r\n\r\n    methods: {\r\n        ////\r\n        \r\n      handler ({BMap, map}) {\r\n        let _this = this;\t// 设置一个临时变量指向vue实例，因为在百度地图回调里使用this，指向的不是vue实例；\r\n        var geolocation = new BMap.Geolocation();\r\n        geolocation.getCurrentPosition(function(r){\r\n          //console.log(r);\r\n          _this.center = {lng: r.longitude, lat: r.latitude};\t\t// 设置center属性值\r\n          _this.autoLocationPoint = {lng: r.longitude, lat: r.latitude};\t\t// 自定义覆盖物\r\n          _this.initLocation = true;\r\n        },{enableHighAccuracy: true})\r\n \r\n        window.map = map;\r\n    },\r\n\r\n    typeCheck (v) {\r\n    try {\r\n        this.tableData.forEach(item => {\r\n            if (item.projectNo == v)\r\n                throw new Error(\"type-check-error\");\r\n        })\r\n        return true\r\n    } catch (e) { \r\n        if (e.message == \"type-check-error\") {//可以接不同的error\r\n            this.$message({\r\n                message:'项目编号已存在',//换成对应的\r\n                type: 'warning'\r\n            })\r\n            return false\r\n            }\r\n        }\r\n    },\r\n    getdev(){\r\n        devnotbound().then(res=>{\r\n            this.devlist = res;\r\n        })\r\n\r\n    },\r\n\r\n    //下面这个函数没问题*****************\r\n    clickEvent(e){\r\n        map.clearOverlays();\r\n\r\n        let Icon_0 = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\", new BMap.Size(23, 25), {\r\n                        offset: new BMap.Size(10, 25), // 指定定位位置  \r\n                        imageOffset: new BMap.Size(0, 0 - 10 * 25)\r\n                    });\r\n\r\n        var myMarker = new BMap.Marker(new BMap.Point(e.point.lng, e.point.lat),{icon: Icon_0});\r\n\r\n        map.addOverlay(myMarker);\r\n\r\n        //用所定位的经纬度查找所在地省市街道等信息\r\n        var point = new BMap.Point(e.point.lng, e.point.lat);\r\n        var gc = new BMap.Geocoder();\r\n        let _this = this;\r\n        gc.getLocation(point, function (rs) {\r\n          var addComp = rs.addressComponents;\r\n          //console.log(rs.address);//地址信息\r\n          _this.locData.address = rs.address;\r\n\r\n\r\n          _this.locData.province = addComp.province;\r\n          _this.locData.city = addComp.city;\r\n          _this.locData.district = addComp.district;\r\n\r\n        });\r\n\r\n        _this.locData.longitude = e.point.lng;\r\n        _this.locData.latitude = e.point.lat;\r\n      },\r\n\r\n      //获取当前位置\r\n      //也没问题\r\n      getLoctionSuccess(point, AddressComponent, marker){\r\n        map.clearOverlays();\r\n        let Icon_0 = new BMap.Icon(\"http://api.map.baidu.com/img/markers.png\", new BMap.Size(23, 25), {\r\n                        offset: new BMap.Size(10, 25), // 指定定位位置  \r\n                        imageOffset: new BMap.Size(0, 0 - 10 * 25)\r\n                    });\r\n        var myMarker = new BMap.Marker(new BMap.Point(point.point.lng, point.point.lat),{icon: Icon_0});\r\n        map.addOverlay(myMarker);\r\n        this.locData.longitude = point.point.lng;\r\n        this.locData.latitude = point.point.lat;\r\n\r\n        var point = new BMap.Point(point.point.lng, point.point.lat);\r\n        var gc = new BMap.Geocoder();\r\n        let _this = this;\r\n        gc.getLocation(point, function (rs) {\r\n          var addComp = rs.addressComponents;\r\n          _this.locData.address = rs.address;\r\n          //格式\r\n \r\n        });\r\n\r\n\r\n      },\r\n\r\n      mapNameChange(e,data) {\r\n        this.loading = true;\r\n        if(!e && !this.search){\r\n          return false\r\n        }\r\n        let that = this,\r\n                point,\r\n                marker = null;\r\n        geoc = new BMap.Geocoder();\r\n\r\n\r\n        let local = new BMap.LocalSearch(map, {\r\n          renderOptions: { map: map },\r\n          onSearchComplete: res => {\r\n            this.loading = false;\r\n            // console.log(res);\r\n            if(res){\r\n              if(data!==\"change\"){\r\n                that.searchOption = res.Kr\r\n              }\r\n              if(res.Kr.length>0){\r\n                that.$set(that.locData,'longitude',res.Kr[0].point.lng)\r\n                that.$set(that.locData,'latitude',res.Kr[0].point.lat)\r\n              }\r\n            }\r\n            if (local.getResults() != undefined) {\r\n              map.clearOverlays(); //清除地图上所有覆盖物\r\n              if (local.getResults().getPoi(0)) {\r\n                point = local.getResults().getPoi(0).point; //获取第一个智能搜索的结果\r\n                map.centerAndZoom(point, 10);\r\n                marker = new BMap.Marker(point); // 创建标注\r\n                map.addOverlay(marker); // 将标注添加到地图中\r\n                marker.enableDragging(); // 可拖拽\r\n                geoc.getLocation(point, function(rs) {\r\n                  var addComp = rs.addressComponents;\r\n                  that.$set(that.locData,'address',addComp.province +  addComp.city + addComp.district + addComp.street + addComp.streetNumber)\r\n\r\n                    that.$set(that.locData,'province',addComp.province)\r\n                    that.$set(that.locData,'city',addComp.city)\r\n                    \r\n                });\r\n              } else {\r\n                this.$message('未匹配到地点!可拖动地图上的红色图标到精确位置');\r\n              }\r\n            } else {\r\n              this.$message(\"未找到搜索结果\");\r\n            }\r\n          }\r\n        });\r\n        local.search(e || this.search);\r\n      },\r\n\r\n      findlocation(){\r\n\r\n        //alert(this.locData.longitude);\r\n        this.positionVisible = false\r\n        this.$emit(\"mapLocationSave\",this.locData)\r\n\r\n        this.insert.lng=this.locData.longitude;//\r\n        this.insert.lat=this.locData.latitude;//\r\n\r\n        this.insert.address=this.locData.address;//\r\n\r\n        this.insert.province = this.locData.province;\r\n        this.insert.city = this.locData.city;\r\n        this.insert.district = this.locData.district;\r\n\r\n        positionVisible = false\r\n        \r\n      },\r\n\r\n      clearSearch(){\r\n        this.loading = false\r\n      },\r\n      \r\n      close(){\r\n        this.positionVisible = false\r\n        this.$emit('mapLocationClose')\r\n      },\r\n    \r\n\r\n\r\n       ////\r\n\r\n        getprovince(){\r\n\r\n            selectprovince().then(res =>{\r\n\r\n                this.provincelist=res;\r\n                //alert(this.provincelist)\r\n            })\r\n\r\n        },\r\n        getcity(){\r\n\r\n            selectcity(this.query.province).then(res =>{\r\n\r\n                this.citylist=[];\r\n                this.query.city='';\r\n                this.citylist=res;\r\n                //alert(this.citylist);\r\n            })\r\n\r\n        },\r\n        getmanager(){\r\n            selectmanager().then(res =>{\r\n                this.managerlist=res;\r\n            })\r\n        },\r\n\r\n\r\n        getData() {\r\n\r\n            projectSelect(this.query).then(res =>{\r\n                this.tableData=res.list;\r\n                this.pageTotal = res.pageTotal ;//|| 50;\r\n                alert(pageTotal);\r\n            })\r\n            //this.getprovince();\r\n            //this.getmanager();\r\n\r\n        },\r\n        all(){\r\n            \r\n                //getprovince();\r\n                this.$set(this.query, 'page', 1);\r\n\r\n                this.query.status='';\r\n                this.query.manager='';\r\n                this.query.city='';\r\n                this.query.province='';\r\n\r\n                projectSelect(this.query).then(res =>{\r\n                    this.tableData=res.list;\r\n                    this.pageTotal = res.pageTotal;// || 50;\r\n                })\r\n        },\r\n        // 触发搜索按钮this.query.status='';\r\n        handleSearch() {\r\n\r\n            //getprovince();\r\n            this.$set(this.query, 'page', 1);\r\n                //this.missionCount = 1;\r\n                projectSelect(this.query).then(res =>{\r\n                this.tableData=res.list;\r\n                this.pageTotal = res.pageTotal; //去掉了 || 50;\r\n            })\r\n        },\r\n        selectPage(){\r\n            selectPage(0,10).then(res=>{\r\n                this.tableData = res.list;\r\n            });\r\n        },\r\n        // 删除操作\r\n        handleDelete(index, row, rowId) {\r\n            // 二次确认删除\r\n            this.$confirm('确定要删除吗？', '提示', {\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n                    this.$message.success('删除成功');\r\n                    this.tableData.splice(index, 1);\r\n\r\n                    proDelete(rowId);\r\n\r\n                })\r\n                .catch(() => {});\r\n        },\r\n        // 多选操作\r\n        handleSelectionChange(val) {\r\n\r\n            //清空上一次的多选情况\r\n            //因为这一次可能有多选项被取消选中\r\n            this.multipleSelection = [];\r\n            this.multipleSelectionId = [];       \r\n\r\n            //alert(index);\r\n           \r\n            this.multipleSelection = val;//原始的\r\n            //alert(this.multipleSelection);\r\n\r\n            val.forEach((element) => {\r\n                this.multipleSelectionId.push(element.id);\r\n            });\r\n                                 \r\n        },\r\n        delAllSelection() {\r\n\r\n\r\n            const length = this.multipleSelectionId.length;\r\n            let str = '';\r\n            let str1 = '';\r\n            let num = length;\r\n            this.delList = this.delList.concat(this.multipleSelectionId);\r\n            //alert(this.delList);\r\n            for (let i = 0; i < length; i++) {\r\n                if(i != num - 1){\r\n                    str += this.multipleSelectionId[i] + ',';//str为ID\r\n                    str1 +=this.multipleSelection[i].projectNo +'、';\r\n                }\r\n                else{\r\n                    str += this.multipleSelectionId[i];\r\n                    str1 +=this.multipleSelection[i].projectNo;\r\n                }\r\n            }\r\n\r\n            this.$confirm('确定要删除吗？', '提示', {\r\n                type: 'warning'\r\n            })\r\n                .then(() => {\r\n\r\n                    proDelete(str);\r\n                    //this.$message.success('删除成功');\r\n                    this.$message.error(`删除了项目${str1}，共${num}条数据`);\r\n                    \r\n                })\r\n                .catch(() => {});\r\n\r\n            this.multipleSelection = [];\r\n\r\n\r\n        },\r\n        // 编辑操作\r\n        handleEdit(index, row, id) {\r\n            //index 只是这条数据在前端中的数值\r\n            \r\n            this.idx = index;\r\n            this.form = row;\r\n            this.temp = row;\r\n            this.editVisible = true;\r\n            this.editId=id;\r\n        },\r\n        \r\n        // 保存编辑\r\n        saveEdit(editId) {\r\n\r\n            this.editVisible = false;\r\n            this.$message.success(`修改第 ${this.idx + 1} 行成功`);\r\n            this.$set(this.tableData, this.idx, this.form);\r\n            //updateData(editId,this.form.status,this.form.executorName,this.editTime,this.editTime1);\r\n\r\n            proupdate(this.form);\r\n            //打补丁，否则修改第二个信息的时候会显示第一次输入\r\n            this.editTime='';\r\n            this.editTime1='';\r\n                     \r\n        },\r\n        cancelEdit(){\r\n\r\n            this.form=this.temp;\r\n            this.$set(this.tableData, this.idx, this.temp);\r\n            this.editVisible = false;\r\n\r\n        },\r\n\r\n        handleInsert() {\r\n\r\n            this.insert={};\r\n            \r\n            //清除选点弹窗中的keyword\r\n            this.keyword=''\r\n            \r\n            this.insertVisible = true;\r\n\r\n        },\r\n        \r\n        submitForm(insertForm) {\r\n            \r\n        this.$refs[insertForm].validate((valid) => {\r\n            if (valid) {\r\n\r\n                proinsertT(this.insert);\r\n\r\n                devbound(this.insert.deviceid,this.insert.projectNo)\r\n\r\n                this.insertVisible = false;\r\n\r\n            } else {\r\n                console.log('error submit!!');\r\n                return false;\r\n            }\r\n            });\r\n        },\r\n        resetForm(insertForm) { //重置表单内容\r\n            this.$refs[insertForm].resetFields();\r\n\r\n        },\r\n        // 分页导航\r\n        handlePageChange(val) {\r\n            this.$set(this.query, 'page', val);\r\n            this.getData();\r\n        },    \r\n\r\n    }\r\n};\r\n",null]}
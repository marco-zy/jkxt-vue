{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\LiveStream.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\LiveStream.vue","mtime":1683272485979},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["\r\nimport { fetchData } from '../../api/index';\r\nimport {province,city,project,mission} from '../../api/index'\r\nimport HwCellPlayer from './HwCellPlayer.vue'\r\nexport default {\r\n    name: 'LiveStream',\r\n    components: {\r\n      HwCellPlayer},\r\n    data() {\r\n        return {\r\n            query: {\r\n\r\n                pageIndex: 1,\r\n                pageSize: 10\r\n            },\r\n            tableData: [],\r\n            multipleSelection: [],\r\n            delList: [],\r\n            editVisible: false,\r\n            pageTotal: 0,\r\n            form: {},\r\n            idx: -1,\r\n            id: -1,\r\n            num: 0,\r\n            cellCount:4,  //默认从4开始\r\n\r\n            treeData1:'',\r\n            props: {\r\n                label: \"label\",\r\n                isLeaf: \"isLeaf\",\r\n            },  \r\n            video:'../videos/01.mp4',\r\n\r\n        cellCountArr: [\r\n          {\r\n            index:1,\r\n            data:null,\r\n            isShow:false\r\n          },\r\n          {\r\n            index:2,\r\n            data:null,\r\n            isShow:false\r\n          },\r\n          {\r\n            index:3,\r\n            data:null,\r\n            isShow:false\r\n          },\r\n          {\r\n            index:4,\r\n            data:null,\r\n            isShow:false\r\n          },\r\n        ],\r\n        iconArr:[             //1 2 3 4 6 9 16宫格 icon 样式\r\n          {\r\n            number:1,   //必须是int（number） 类型 \r\n            name:'el-icon-s-platform',\r\n            tips:'1画面'\r\n          },\r\n          {\r\n            number:4,   //必须是int（number） 类型 \r\n            name:'el-icon-menu',\r\n            tips:'4画面'\r\n          },\r\n          {\r\n            number:9,   //必须是int（number） 类型 \r\n            name:'el-icon-s-grid',\r\n            tips:'9画面'\r\n          },\r\n          {\r\n            number:16,  //必须是int（number） 类型 \r\n            name:'el-icon-s-grid',\r\n            tips:'16画面'\r\n          },\r\n\r\n        ],  \r\n        };\r\n    },\r\n    created() {\r\n        this.getData();\r\n        this.getprovince();\r\n    },\r\n    methods: {\r\n        // 获取 easy-mock 的模拟数据\r\n        getData() {\r\n            fetchData(this.query).then(res => {\r\n                //alert(res);\r\n                console.log(res);\r\n                this.tableData = res.list; \r\n                //this.tableData = res.list; /* 将获取数据中的list赋值给tabledata */\r\n                this.pageTotal = res.pageTotal ;//|| 50;\r\n            });\r\n        },\r\n        cellCountFn(number){\r\n            this.cellCount = number\r\n            this.cellCountArr.length = number\r\n        },\r\n        handleNodeClick(data) \r\n        {\r\n            console.log(data);\r\n\r\n            //新增一个属性\r\n            if(data.level==\"province\"){\r\n                //alert(\"province\")\r\n\r\n                this.center = {};\r\n                this.center = data.label;\r\n                this.boundaryname = data.label\r\n                this.zoom=8;\r\n\r\n            }\r\n            else if(data.level==\"city\"){\r\n\r\n                this.center = {};\r\n                this.center=data.label;\r\n                this.boundaryname = data.label\r\n                this.zoom = 10;\r\n                \r\n                //alert(\"city\")\r\n            }else if(data.level==\"project\"){\r\n\r\n                this.coordination.lat = data.lat;\r\n                this.coordination.lng = data.lng;\r\n                this.center = this.coordination;\r\n                this.zoom = 16;\r\n                //alert(\"project\")\r\n            }          \r\n     \r\n      },\r\n\r\n        loadNode(node, resolve) {\r\n          \r\n        //如果展开第一级节点，从后台加载一级节点列表******省\r\n        if (node.level == 0) {\r\n            this.loadfirstnode(resolve);\r\n        }\r\n        //如果展开市节点，动态从后台加载下一级节点列表******市\r\n        if (node.level == 1) {\r\n            this.loadcitynode(node, resolve);\r\n        }\r\n        //如果展开项目节点，动态从后台加载下一级节点列表******项目\r\n        if (node.level == 2) {\r\n            this.loadprojectnode(node, resolve);\r\n        }\r\n        if (node.level == 3) {\r\n            this.loadmissionnode(node, resolve);\r\n        }\r\n\r\n        },\r\n\r\n         async loadfirstnode(resolve) {\r\n        let params = {\r\n            level: 0,\r\n        };\r\n\r\n        const res = await province();\r\n        return resolve(res);\r\n        },\r\n        //市\r\n        async loadcitynode(node, resolve) {\r\n\r\n        let params = {\r\n            province: node.label,\r\n        };\r\n        const res = await city(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        //项目\r\n        async loadprojectnode(node, resolve) {\r\n        \r\n        let params = {\r\n            city: node.label,\r\n        };\r\n        const res = await project(params);\r\n        return resolve(res);\r\n        },\r\n        \r\n        async loadmissionnode(node, resolve) {\r\n        \r\n        //alert(node.objId)\r\n        let params = {\r\n            projectId: node.data.objId,\r\n        };\r\n        const res = await mission(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        //设备\r\n        async loaddevicenode(node, resolve) {\r\n        \r\n        let params = {\r\n            city: node.label,\r\n        };\r\n        const res = await project(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        \r\n    getprovince(){\r\n        province().then(res=>{\r\n          \r\n            this.treeData1=res;\r\n            //alert(this.treeData1);\r\n            \r\n        })\r\n    },\r\n        proselect(){\r\n        dashproselect().then(res=>[\r\n        this.markers=res\r\n        ])\r\n    },\r\n\r\n    },\r\n    computed: {\r\n    // 计算类样式属性\r\n    cellClass() {\r\n      return function (index) {\r\n            switch (this.cellCount) {\r\n                case 1:\r\n                    return ['cell-player-1']\r\n                case 4:\r\n                    return ['cell-player-4']                 \r\n                case 9:\r\n                    return ['cell-player-9']\r\n                case 16:\r\n                    return ['cell-player-16']\r\n                default:\r\n                    break;\r\n                }\r\n\r\n            }\r\n    },\r\n}\r\n};\r\n\r\n\r\n",null]}
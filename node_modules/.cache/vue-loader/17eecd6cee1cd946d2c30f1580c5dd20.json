{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\Dashboard.vue","mtime":1683266274601},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["\r\n//import Schart from 'vue-schart';\r\nimport {dashprocount,dashdevcount,dashmisscount,dashproselect,dashusercount} from '../../api/index'\r\nimport {province,city,project,mission} from '../../api/index'\r\n//import bus from '../common/bus';\r\nexport default {\r\n    name: 'dashboard',\r\n    data() {\r\n        \r\n        return {\r\n            name: localStorage.getItem('ms_username'),\r\n            nowDate:'',\r\n            nowTime:'',\r\n            center: {lng: 104.969052, lat: 33.377164},//\r\n            zoom: 5,\r\n            projectcount:'',\r\n            devicecount:'',\r\n            missioncount:'',\r\n            markers: [],\r\n            inforWindow:{\r\n                id:'',\r\n                projectNo:'',\r\n                projectName:'',\r\n                startTime:'',\r\n                manager:'',\r\n                province:'',\r\n                city:'',\r\n                lng:'',\r\n                lat:'',\r\n                status:'',\r\n                createTime:'',\r\n                updateTime:''\r\n            },\r\n            boundaryname:'',\r\n            coordination:{\r\n                lat:'',\r\n                lng:''\r\n            },\r\n            doundarycolor:'',\r\n            filterText: '',\r\n            usecount:'',\r\n\r\n            //////////////     \r\n            props: {\r\n                label: \"label\",\r\n                isLeaf: \"isLeaf\",\r\n            },       \r\n    };\r\n    \r\n    },\r\n    components: {\r\n        /* //Schart */\r\n    },\r\n\r\n    computed: {\r\n        role() {\r\n            return this.name === 'admin' ? '超级管理员' : '普通用户';\r\n        }\r\n    },\r\n    // created() {\r\n    //     this.handleListener();\r\n    //     this.changeDate();\r\n    // },\r\n    // activated() {\r\n    //     this.handleListener();\r\n    // },\r\n    // deactivated() {\r\n    //     window.removeEventListener('resize', this.renderChart);\r\n    //     bus.$off('collapse', this.handleBus);\r\n    // },\r\n    created(){\r\n        this.currentTime();\r\n        this.proselect();\r\n        this.getprovince();\r\n        this.dashcount();\r\n    },\r\n    mounted(){\r\n        this.currentTime();\r\n        this.proselect();\r\n        this.getprovince();\r\n        this.dashcount();\r\n    },\r\n    watch: {\r\n      filterText(val) {\r\n            this.$refs.tree.filter(val);\r\n        }\r\n        },\r\n        \r\n\r\n    methods: {\r\n\r\n        filterNode(value, data) {\r\n        if (!value) return true;\r\n        return data.label.indexOf(value) !== -1;\r\n      },\r\n      \r\n      ///页面跳转\r\n      toProject(){\r\n        this.$router.push('/Project');\r\n        this.dashcount();\r\n      },\r\n      toMission(){\r\n        this.$router.push('/Mission');\r\n        this.dashcount();\r\n      },      \r\n      toDevice(){\r\n        this.$router.push('/Device');\r\n        this.dashcount();\r\n      },      \r\n      toUser(){\r\n        this.$router.push('/User');\r\n        this.dashcount();\r\n      },\r\n      dashcount(){\r\n\r\n        this.procount();\r\n        this.devcount();\r\n        this.misscount();\r\n        this.usercount();\r\n\r\n      },\r\n\r\n        /////////\r\n        // 绑定click事件\r\n        /////\r\n        loadNode(node, resolve) {\r\n        //如果展开第一级节点，从后台加载一级节点列表******省\r\n        if (node.level == 0) {\r\n            this.loadfirstnode(resolve);\r\n        }\r\n        //如果展开市节点，动态从后台加载下一级节点列表******市\r\n        if (node.level == 1) {\r\n            this.loadcitynode(node, resolve);\r\n        }\r\n        //如果展开项目节点，动态从后台加载下一级节点列表******项目\r\n        if (node.level == 2) {\r\n            this.loadprojectnode(node, resolve);\r\n        }\r\n        if (node.level == 3) {\r\n            this.loadmissionnode(node, resolve);\r\n            //console.log(node)\r\n        }\r\n\r\n        },\r\n\r\n        //省\r\n        async loadfirstnode(resolve) {\r\n        let params = {\r\n            level: 0,\r\n        };\r\n\r\n        const res = await province();\r\n        return resolve(res);\r\n        },\r\n        //市\r\n        async loadcitynode(node, resolve) {\r\n\r\n        let params = {\r\n            province: node.label,\r\n        };\r\n        const res = await city(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        //项目\r\n        async loadprojectnode(node, resolve) {\r\n        \r\n        let params = {\r\n            city: node.label,\r\n        };\r\n        const res = await project(params);\r\n        return resolve(res);\r\n        },        \r\n        \r\n        //任务\r\n        async loadmissionnode(node, resolve) {\r\n        console.log(node)\r\n        let params = {\r\n            projectId: node.data.objId,\r\n        };\r\n        const res = await mission(params);\r\n        console.log(res)\r\n        return resolve(res);\r\n        },\r\n\r\n        //设备\r\n        async loaddevicenode(node, resolve) {\r\n        \r\n        let params = {\r\n            city: node.label,\r\n        };\r\n        const res = await project(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        ///////////\r\n        handleNodeClick(data) \r\n        {\r\n            //console.log(data);\r\n\r\n            //新增一个属性\r\n            if(data.level==\"province\"){\r\n                //alert(\"province\")\r\n\r\n                this.center = {};\r\n                this.center = data.label;\r\n                this.boundaryname = data.label\r\n                this.zoom=8;\r\n\r\n            }\r\n            else if(data.level==\"city\"){\r\n\r\n                this.center = {};\r\n                this.center=data.label;\r\n                this.boundaryname = data.label\r\n                this.zoom = 10;\r\n                \r\n                //alert(\"city\")\r\n            }else if(data.level==\"project\"){\r\n\r\n                this.coordination.lat = data.lat;\r\n                this.coordination.lng = data.lng;\r\n                this.center = this.coordination;\r\n                this.zoom = 16;\r\n                //alert(\"project\")\r\n            }          \r\n     \r\n      },\r\n\r\n        // 点击点坐标赋值\r\n    lookDetail(marker){\r\n        marker.showFlag = true;\r\n        this.inforWindow = marker;\r\n\r\n        // this.inforWindow\r\n\r\n\r\n        //alert(this.infoWindow.lat,this.infoWindow.lng);\r\n\r\n    },\r\n    // 关闭弹窗\r\n    infoWindowClose(marker) {\r\n        marker.showFlag = false\r\n    },\r\n    // 打开弹窗\r\n    infoWindowOpen(marker) {\r\n        marker.showFlag = true\r\n    },\r\n\r\n    procount(){\r\n        dashprocount().then(res=>{\r\n\r\n            this.projectcount=res;\r\n        })\r\n    },\r\n    devcount(){\r\n        dashdevcount().then(res=>{\r\n\r\n            this.devicecount=res;\r\n        })\r\n    },\r\n    misscount(){\r\n\r\n        dashmisscount().then(res=>{\r\n            this.missioncount=res;\r\n        })\r\n    },\r\n    usercount(){\r\n        dashusercount().then(res=>{\r\n            this.usecount=res;\r\n        })\r\n    },\r\n    proselect(){\r\n        dashproselect().then(res=>[\r\n        this.markers=res\r\n        ])\r\n    },\r\n\r\n    getprovince(){\r\n        province().then(res=>{\r\n            this.treeData1=res;\r\n            //alert(this.treeData1);\r\n            \r\n        })\r\n    },\r\n\r\n////树状图加载\r\n////树状图加载\r\n\r\n        changeDate() {\r\n            const now = new Date().getTime();\r\n            this.data.forEach((item, index) => {\r\n                const date = new Date(now - (6 - index) * 86400000);\r\n                item.name = `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\r\n            });\r\n        },\r\n\r\n        getDate() {\r\n            let date = new Date();\r\n            let year = date.getFullYear(); // 年\r\n            let month = date.getMonth() + 1; // 月\r\n            let day = date.getDate(); // 日\r\n            let week = date.getDay(); // 星期\r\n            let weekArr = [ \"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\" ];\r\n            let hour = date.getHours(); // 时\r\n            hour = hour < 10 ? \"0\" + hour : hour; // 如果只有一位，则前面补零\r\n            let minute = date.getMinutes(); // 分\r\n            minute = minute < 10 ? \"0\" + minute : minute; // 如果只有一位，则前面补零\r\n            let second = date.getSeconds(); // 秒\r\n            second = second < 10 ? \"0\" + second : second; // 如果只有一位，则前面补零\r\n            this.nowDate = `${year}年${month}月${day}日 ${weekArr[week]}`;\r\n            this.nowTime = `${hour}时${minute}分${second}秒`;\r\n        },\r\n\r\n        currentTime(){\r\n            setInterval(()=>{\r\n                this.getDate()\r\n            },500)\r\n        },\r\n        handler ({BMap, map}) {\r\n        console.log(BMap, map)\r\n            this.center.lng = 116.404\r\n            this.center.lat = 39.915\r\n            this.zoom = 15\r\n        }\r\n    }\r\n};\r\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";AA4JA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/components/page","sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"20\" name=\"1\">\r\n            <el-col :span=\"8\" class=\"mgb5 mgt5\">\r\n\r\n                <!--账户信息-->\r\n                <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\">\r\n                            <div class=\"grid-content grid-con-1\">\r\n                                <img src=\"../../assets/img/img.jpg\" class=\"user-avator\" alt />\r\n                                <div class=\" user-info-cont\">\r\n                                    <div class=\"user-info-name\">{{name}}</div>\r\n                                    <div>{{role}}</div>\r\n                                </div>\r\n                                <div class=\" user-info-cont1\">\r\n                                    <div>当前时间：</div>\r\n                                    <div class=\"user-info-time\">{{ nowDate }}</div>\r\n                                    <div class=\"user-info-time\">{{ nowTime }}</div>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                <!--账户信息-->\r\n                              \r\n            </el-col>\r\n\r\n            <el-col :span=\"16\">\r\n                <el-row :gutter=\"20\" class=\"mgb5 mgt5\">\r\n                    <el-col :span=\"6\" >\r\n                        <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\" >\r\n                            <div class=\"grid-content grid-con-1\" @click=\"this.toProject\">\r\n                                <i class=\"el-icon-s-flag grid-con-icon\"></i>\r\n                                <div class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{this.projectcount}}</div>\r\n                                    <div class=\"mgt10\">项目数</div>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n                    <el-col :span=\"6\">\r\n                        <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\">\r\n                            <div class=\"grid-content grid-con-2\" @click=\"this.toMission\">\r\n                                <i class=\"el-icon-s-claim grid-con-icon\"></i>\r\n                                <div class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{ this.missioncount }}</div>\r\n                                    <div class=\"mgt10\">任务数</div>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n                    <el-col :span=\"6\">\r\n                        <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\" >\r\n                            <div class=\"grid-content grid-con-3\" @click=\"this.toDevice\">\r\n                                <i class=\"el-icon-video-camera-solid grid-con-icon\"></i>\r\n                                <div class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{this.devicecount}}</div>\r\n                                    <div class=\"mgt10\">设备数</div>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n\r\n                    <el-col :span=\"6\">\r\n                        <el-card shadow=\"hover\" :body-style=\"{padding: '0px'}\">\r\n                            <div class=\"grid-content grid-con-4\" @click=\"this.toUser\">\r\n                                <i class=\"el-icon-s-custom grid-con-icon\"></i>\r\n                                <div class=\"grid-cont-right\">\r\n                                    <div class=\"grid-num\">{{this.usecount}}</div>\r\n                                    <div class=\"mgt10\">用户数</div>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n                </el-row>\r\n\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-col :span=\"4\"> <!-- 最下面的左框，放树 --> <!-- ***************************************** -->\r\n            <el-card shadow=\"hover\">\r\n                <!-- <div style=\"text-align: center;\">\r\n                    <el-button @click=\"handleCheckedTreeExpand\" size=\"mini\">展开/折叠</el-button>\r\n                </div> -->\r\n                <!-- <el-input\r\n                    placeholder=\"输入关键字进行过滤\"\r\n                    v-model=\"filterText\">\r\n                </el-input> -->\r\n                <div style=\"text-align: center;color:#909399; margin-bottom: 10px; font-size: 18px;\">列表</div>\r\n            \r\n                <div style=\"height:575px;\" >\r\n                    <el-scrollbar style=\"height:100%\">\r\n\r\n                    <el-tree lazy :load=\"loadNode\" \r\n                        :props=\"props\" node-key=\"id\" \r\n                        :filter-node-method=\"filterNode\"\r\n                        @node-click=\"handleNodeClick\"\r\n                        class=\"filter-tree\"\r\n                        ref=\"tree\"\r\n                        style=\"height:550px;\">\r\n                    </el-tree>\r\n                \r\n                </el-scrollbar>\r\n                </div>\r\n            </el-card>\r\n        </el-col>\r\n\r\n        <el-col :span=\"20\"> <!-- 最下面的大框，放地图-->\r\n            <el-card shadow=\"hover\">\r\n                <div style=\"height:610px;\">\r\n                    <baidu-map class=\"bm-view\" :center=this.center :zoom=\"this.zoom\" :scroll-wheel-zoom=\"true\">\r\n                        \r\n                        <div v-for=\"marker of markers\">\r\n                            <bm-marker  :position=\"{lng: marker.lng, lat: marker.lat}\" @click=\"lookDetail(marker)\">\r\n                                <bm-info-window :title=\"marker.projectName\" :position=\"{lng: marker.lng, lat: marker.lat}\"   \r\n                                :show=\"marker.showFlag\" @close=\"infoWindowClose(marker)\" @open=\"infoWindowOpen(marker)\">\r\n                                <div style=\"font-size:11px;\">\r\n                                    <div>\r\n                                        编号：{{marker.projectNo}}\r\n                                    </div>\r\n                                    <div>\r\n                                        起始时间：{{marker.startTime}}\r\n                                    </div>\r\n                                    <div>\r\n                                        负责人：{{marker.manager}}\r\n                                    </div>\r\n                                    <div>\r\n                                        状态：{{marker.status}}\r\n                                    </div>\r\n                                    <!-- <div style=\"color: red;\">\r\n                                        任务：未实现\r\n                                    </div>\r\n                                    <div style=\"color: red;\">\r\n                                        设备：未实现\r\n                                    </div> -->\r\n                                    \r\n                                    \r\n                                </div>\r\n                                </bm-info-window>\r\n                            </bm-marker>\r\n\r\n                        </div>\r\n                        \r\n                        <bm-scale anchor=\"BMAP_ANCHOR_BOTTOM_LEFT\"></bm-scale>\r\n                        <bm-navigation anchor=\"BMAP_ANCHOR_TOP_LEFT\"></bm-navigation>\r\n                        <bm-map-type :map-types=\"['BMAP_NORMAL_MAP', 'BMAP_HYBRID_MAP']\" anchor=\"BMAP_ANCHOR_TOP_RIGHT\"></bm-map-type>\r\n\r\n                        <bm-boundary :name=boundaryname :strokeWeight=\"3\" strokeColor=\"green\" fillOpacity=\"0\"></bm-boundary>\r\n                        <!-- 有bug -->\r\n\r\n                    </baidu-map>\r\n                </div>\r\n            </el-card>\r\n        </el-col>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n//import Schart from 'vue-schart';\r\nimport {dashprocount,dashdevcount,dashmisscount,dashproselect,dashusercount} from '../../api/index'\r\nimport {province,city,project,mission} from '../../api/index'\r\n//import bus from '../common/bus';\r\nexport default {\r\n    name: 'dashboard',\r\n    data() {\r\n        \r\n        return {\r\n            name: localStorage.getItem('ms_username'),\r\n            nowDate:'',\r\n            nowTime:'',\r\n            center: {lng: 104.969052, lat: 33.377164},//\r\n            zoom: 5,\r\n            projectcount:'',\r\n            devicecount:'',\r\n            missioncount:'',\r\n            markers: [],\r\n            inforWindow:{\r\n                id:'',\r\n                projectNo:'',\r\n                projectName:'',\r\n                startTime:'',\r\n                manager:'',\r\n                province:'',\r\n                city:'',\r\n                lng:'',\r\n                lat:'',\r\n                status:'',\r\n                createTime:'',\r\n                updateTime:''\r\n            },\r\n            boundaryname:'',\r\n            coordination:{\r\n                lat:'',\r\n                lng:''\r\n            },\r\n            doundarycolor:'',\r\n            filterText: '',\r\n            usecount:'',\r\n\r\n            //////////////     \r\n            props: {\r\n                label: \"label\",\r\n                isLeaf: \"isLeaf\",\r\n            },       \r\n    };\r\n    \r\n    },\r\n    components: {\r\n        /* //Schart */\r\n    },\r\n\r\n    computed: {\r\n        role() {\r\n            return this.name === 'admin' ? '超级管理员' : '普通用户';\r\n        }\r\n    },\r\n    // created() {\r\n    //     this.handleListener();\r\n    //     this.changeDate();\r\n    // },\r\n    // activated() {\r\n    //     this.handleListener();\r\n    // },\r\n    // deactivated() {\r\n    //     window.removeEventListener('resize', this.renderChart);\r\n    //     bus.$off('collapse', this.handleBus);\r\n    // },\r\n    created(){\r\n        this.currentTime();\r\n        this.proselect();\r\n        this.getprovince();\r\n        this.dashcount();\r\n    },\r\n    mounted(){\r\n        this.currentTime();\r\n        this.proselect();\r\n        this.getprovince();\r\n        this.dashcount();\r\n    },\r\n    watch: {\r\n      filterText(val) {\r\n            this.$refs.tree.filter(val);\r\n        }\r\n        },\r\n        \r\n\r\n    methods: {\r\n\r\n        filterNode(value, data) {\r\n        if (!value) return true;\r\n        return data.label.indexOf(value) !== -1;\r\n      },\r\n      \r\n      ///页面跳转\r\n      toProject(){\r\n        this.$router.push('/Project');\r\n        this.dashcount();\r\n      },\r\n      toMission(){\r\n        this.$router.push('/Mission');\r\n        this.dashcount();\r\n      },      \r\n      toDevice(){\r\n        this.$router.push('/Device');\r\n        this.dashcount();\r\n      },      \r\n      toUser(){\r\n        this.$router.push('/User');\r\n        this.dashcount();\r\n      },\r\n      dashcount(){\r\n\r\n        this.procount();\r\n        this.devcount();\r\n        this.misscount();\r\n        this.usercount();\r\n\r\n      },\r\n\r\n        /////////\r\n        // 绑定click事件\r\n        /////\r\n        loadNode(node, resolve) {\r\n        //如果展开第一级节点，从后台加载一级节点列表******省\r\n        if (node.level == 0) {\r\n            this.loadfirstnode(resolve);\r\n        }\r\n        //如果展开市节点，动态从后台加载下一级节点列表******市\r\n        if (node.level == 1) {\r\n            this.loadcitynode(node, resolve);\r\n        }\r\n        //如果展开项目节点，动态从后台加载下一级节点列表******项目\r\n        if (node.level == 2) {\r\n            this.loadprojectnode(node, resolve);\r\n        }\r\n        if (node.level == 3) {\r\n            this.loadmissionnode(node, resolve);\r\n            //console.log(node)\r\n        }\r\n\r\n        },\r\n\r\n        //省\r\n        async loadfirstnode(resolve) {\r\n        let params = {\r\n            level: 0,\r\n        };\r\n\r\n        const res = await province();\r\n        return resolve(res);\r\n        },\r\n        //市\r\n        async loadcitynode(node, resolve) {\r\n\r\n        let params = {\r\n            province: node.label,\r\n        };\r\n        const res = await city(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        //项目\r\n        async loadprojectnode(node, resolve) {\r\n        \r\n        let params = {\r\n            city: node.label,\r\n        };\r\n        const res = await project(params);\r\n        return resolve(res);\r\n        },        \r\n        \r\n        //任务\r\n        async loadmissionnode(node, resolve) {\r\n        console.log(node)\r\n        let params = {\r\n            projectId: node.data.objId,\r\n        };\r\n        const res = await mission(params);\r\n        console.log(res)\r\n        return resolve(res);\r\n        },\r\n\r\n        //设备\r\n        async loaddevicenode(node, resolve) {\r\n        \r\n        let params = {\r\n            city: node.label,\r\n        };\r\n        const res = await project(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        ///////////\r\n        handleNodeClick(data) \r\n        {\r\n            //console.log(data);\r\n\r\n            //新增一个属性\r\n            if(data.level==\"province\"){\r\n                //alert(\"province\")\r\n\r\n                this.center = {};\r\n                this.center = data.label;\r\n                this.boundaryname = data.label\r\n                this.zoom=8;\r\n\r\n            }\r\n            else if(data.level==\"city\"){\r\n\r\n                this.center = {};\r\n                this.center=data.label;\r\n                this.boundaryname = data.label\r\n                this.zoom = 10;\r\n                \r\n                //alert(\"city\")\r\n            }else if(data.level==\"project\"){\r\n\r\n                this.coordination.lat = data.lat;\r\n                this.coordination.lng = data.lng;\r\n                this.center = this.coordination;\r\n                this.zoom = 16;\r\n                //alert(\"project\")\r\n            }          \r\n     \r\n      },\r\n\r\n        // 点击点坐标赋值\r\n    lookDetail(marker){\r\n        marker.showFlag = true;\r\n        this.inforWindow = marker;\r\n\r\n        // this.inforWindow\r\n\r\n\r\n        //alert(this.infoWindow.lat,this.infoWindow.lng);\r\n\r\n    },\r\n    // 关闭弹窗\r\n    infoWindowClose(marker) {\r\n        marker.showFlag = false\r\n    },\r\n    // 打开弹窗\r\n    infoWindowOpen(marker) {\r\n        marker.showFlag = true\r\n    },\r\n\r\n    procount(){\r\n        dashprocount().then(res=>{\r\n\r\n            this.projectcount=res;\r\n        })\r\n    },\r\n    devcount(){\r\n        dashdevcount().then(res=>{\r\n\r\n            this.devicecount=res;\r\n        })\r\n    },\r\n    misscount(){\r\n\r\n        dashmisscount().then(res=>{\r\n            this.missioncount=res;\r\n        })\r\n    },\r\n    usercount(){\r\n        dashusercount().then(res=>{\r\n            this.usecount=res;\r\n        })\r\n    },\r\n    proselect(){\r\n        dashproselect().then(res=>[\r\n        this.markers=res\r\n        ])\r\n    },\r\n\r\n    getprovince(){\r\n        province().then(res=>{\r\n            this.treeData1=res;\r\n            //alert(this.treeData1);\r\n            \r\n        })\r\n    },\r\n\r\n////树状图加载\r\n////树状图加载\r\n\r\n        changeDate() {\r\n            const now = new Date().getTime();\r\n            this.data.forEach((item, index) => {\r\n                const date = new Date(now - (6 - index) * 86400000);\r\n                item.name = `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\r\n            });\r\n        },\r\n\r\n        getDate() {\r\n            let date = new Date();\r\n            let year = date.getFullYear(); // 年\r\n            let month = date.getMonth() + 1; // 月\r\n            let day = date.getDate(); // 日\r\n            let week = date.getDay(); // 星期\r\n            let weekArr = [ \"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\" ];\r\n            let hour = date.getHours(); // 时\r\n            hour = hour < 10 ? \"0\" + hour : hour; // 如果只有一位，则前面补零\r\n            let minute = date.getMinutes(); // 分\r\n            minute = minute < 10 ? \"0\" + minute : minute; // 如果只有一位，则前面补零\r\n            let second = date.getSeconds(); // 秒\r\n            second = second < 10 ? \"0\" + second : second; // 如果只有一位，则前面补零\r\n            this.nowDate = `${year}年${month}月${day}日 ${weekArr[week]}`;\r\n            this.nowTime = `${hour}时${minute}分${second}秒`;\r\n        },\r\n\r\n        currentTime(){\r\n            setInterval(()=>{\r\n                this.getDate()\r\n            },500)\r\n        },\r\n        handler ({BMap, map}) {\r\n        console.log(BMap, map)\r\n            this.center.lng = 116.404\r\n            this.center.lat = 39.915\r\n            this.zoom = 15\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.el-row {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.grid-content {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100px;\r\n}\r\n\r\n.grid-cont-right {\r\n    flex: 1;\r\n    text-align: center;\r\n    font-size: 16px;\r\n    color: #999;\r\n}\r\n\r\n.grid-num {\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n}\r\n\r\n.grid-con-icon {\r\n    font-size: 50px;\r\n    width: 100px;\r\n    height: 100px;\r\n    text-align: center;\r\n    line-height: 100px;\r\n    color: #fff;\r\n}\r\n\r\n*::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n\r\n.grid-con-1 .grid-con-icon {\r\n    background: rgb(45, 140, 240);\r\n}\r\n\r\n.grid-con-1 .grid-num {\r\n    color: rgb(45, 140, 240);\r\n}\r\n\r\n.grid-con-2 .grid-con-icon {\r\n    background: rgb(100, 213, 114);\r\n}\r\n\r\n.grid-con-2 .grid-num {\r\n    color: rgb(100, 213, 114);\r\n}\r\n\r\n.grid-con-3 .grid-con-icon {\r\n    background: rgb(242, 94, 67);\r\n}\r\n\r\n.grid-con-3 .grid-num {\r\n    color: rgb(242, 94, 67);\r\n}\r\n.grid-con-4 .grid-con-icon {\r\n    background: rgb(139, 80, 242);\r\n}\r\n\r\n.grid-con-4 .grid-num {\r\n    color: rgb(139, 80, 242);\r\n}\r\n\r\n.user-info {\r\n    display: flex;\r\n    align-items: center;\r\n    padding-bottom: 20px;\r\n    border-bottom: 2px solid #ccc;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.user-avator {\r\n    width: 80px;\r\n    height: 80px;\r\n    /* padding-left: 20px; */\r\n    margin-left:35px;\r\n    border-radius: 50%;\r\n    \r\n}\r\n\r\n.user-info-cont {\r\n    padding-left: 30px;\r\n    flex: 1;\r\n    font-size: 14px;\r\n    color: #999;\r\n}\r\n\r\n\r\n.user-info-cont1 {\r\n    padding-right: 30px;\r\n    padding-top: 3px;\r\n    flex: 1;\r\n    font-size: 14px;\r\n    color: #999;\r\n}\r\n\r\n.user-info-time{\r\n    \r\n    width:150px;\r\n    flex: 1;\r\n    font-size: 14px;\r\n    color: #999;\r\n}\r\n\r\n\r\n.user-info-cont div:first-child {\r\n    font-size: 30px;\r\n    color: #222;\r\n}\r\n\r\n.user-info-list {\r\n    font-size: 14px;\r\n    color: #999;\r\n    line-height: 25px;\r\n}\r\n\r\n.user-info-list span {\r\n    margin-left: 70px;\r\n}\r\n\r\n.mgb20 {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.mgb5 {\r\n    margin-bottom: 5px;\r\n}\r\n.mgt5 {\r\n    margin-top: 5px;\r\n}\r\n\r\n.bm-view {\r\n    width: 100%;\r\n    height: 610px;\r\n  }\r\n\r\n</style>\r\n"]}]}
{"remainingRequest":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\src\\components\\page\\Dashboard.vue","mtime":1683269947687},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\babel-loader\\lib\\index.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1681546634000},{"path":"E:\\Java项目\\vue-manage-system-4.2.0\\node_modules\\vue-loader\\lib\\index.js","mtime":1681546634000}],"contextDependencies":[],"result":["\r\n//import Schart from 'vue-schart';\r\nimport {dashprocount,dashdevcount,dashmisscount,dashproselect,dashusercount} from '../../api/index'\r\nimport {province,city,project,mission} from '../../api/index'\r\n//import bus from '../common/bus';\r\nexport default {\r\n    name: 'dashboard',\r\n    data() {\r\n        \r\n        return {\r\n            name: localStorage.getItem('ms_username'),\r\n            nowDate:'',\r\n            nowTime:'',\r\n            center: {lng: 104.969052, lat: 33.377164},//\r\n            zoom: 5,\r\n            projectcount:'',\r\n            devicecount:'',\r\n            missioncount:'',\r\n            markers: [],\r\n            inforWindow:{\r\n                id:'',\r\n                projectNo:'',\r\n                projectName:'',\r\n                startTime:'',\r\n                manager:'',\r\n                province:'',\r\n                city:'',\r\n                lng:'',\r\n                lat:'',\r\n                status:'',\r\n                createTime:'',\r\n                updateTime:''\r\n            },\r\n            boundaryname:'',\r\n            coordination:{\r\n                lat:'',\r\n                lng:''\r\n            },\r\n            doundarycolor:'',\r\n            filterText: '',\r\n            usecount:'',\r\n\r\n            //////////////     \r\n            props: {\r\n                label: \"label\",\r\n                isLeaf: \"isLeaf\",\r\n            },       \r\n    };\r\n    \r\n    },\r\n    components: {\r\n        /* //Schart */\r\n    },\r\n\r\n    computed: {\r\n        role() {\r\n            return this.name === 'admin' ? '超级管理员' : '普通用户';\r\n        }\r\n    },\r\n    // created() {\r\n    //     this.handleListener();\r\n    //     this.changeDate();\r\n    // },\r\n    // activated() {\r\n    //     this.handleListener();\r\n    // },\r\n    // deactivated() {\r\n    //     window.removeEventListener('resize', this.renderChart);\r\n    //     bus.$off('collapse', this.handleBus);\r\n    // },\r\n    created(){\r\n        this.currentTime();\r\n        this.proselect();\r\n        this.getprovince();\r\n        this.dashcount();\r\n    },\r\n    mounted(){\r\n        this.currentTime();\r\n        this.proselect();\r\n        this.getprovince();\r\n        this.dashcount();\r\n    },\r\n    watch: {\r\n      filterText(val) {\r\n            this.$refs.tree.filter(val);\r\n        }\r\n        },\r\n        \r\n\r\n    methods: {\r\n\r\n        filterNode(value, data) {\r\n        if (!value) return true;\r\n        return data.label.indexOf(value) !== -1;\r\n      },\r\n      \r\n      ///页面跳转\r\n      toProject(){\r\n        this.$router.push('/Project');\r\n        this.dashcount();\r\n      },\r\n      toMission(){\r\n        this.$router.push('/Mission');\r\n        this.dashcount();\r\n      },      \r\n      toDevice(){\r\n        this.$router.push('/Device');\r\n        this.dashcount();\r\n      },      \r\n      toUser(){\r\n        this.$router.push('/User');\r\n        this.dashcount();\r\n      },\r\n      dashcount(){\r\n\r\n        this.procount();\r\n        this.devcount();\r\n        this.misscount();\r\n        this.usercount();\r\n\r\n      },\r\n\r\n        /////////\r\n        // 绑定click事件\r\n        /////\r\n        loadNode(node, resolve) {\r\n        //如果展开第一级节点，从后台加载一级节点列表******省\r\n        if (node.level == 0) {\r\n            this.loadfirstnode(resolve);\r\n        }\r\n        //如果展开市节点，动态从后台加载下一级节点列表******市\r\n        if (node.level == 1) {\r\n            this.loadcitynode(node, resolve);\r\n        }\r\n        //如果展开项目节点，动态从后台加载下一级节点列表******项目\r\n        if (node.level == 2) {\r\n            this.loadprojectnode(node, resolve);\r\n        }\r\n        if (node.level == 3) {\r\n            this.loadmissionnode(node, resolve);\r\n            //console.log(node)\r\n        }\r\n\r\n        },\r\n\r\n        //省\r\n        async loadfirstnode(resolve) {\r\n        let params = {\r\n            level: 0,\r\n        };\r\n\r\n        const res = await province();\r\n        return resolve(res);\r\n        },\r\n        //市\r\n        async loadcitynode(node, resolve) {\r\n\r\n        let params = {\r\n            province: node.label,\r\n        };\r\n        const res = await city(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        //项目\r\n        async loadprojectnode(node, resolve) {\r\n        \r\n        let params = {\r\n            city: node.label,\r\n        };\r\n        const res = await project(params);\r\n        return resolve(res);\r\n        },        \r\n        \r\n        //任务\r\n        async loadmissionnode(node, resolve) {\r\n        console.log(node)\r\n        let params = {\r\n            projectId: node.data.objId,\r\n        };\r\n        const res = await mission(params);\r\n        console.log(res)\r\n        return resolve(res);\r\n        },\r\n\r\n        //设备\r\n        async loaddevicenode(node, resolve) {\r\n        \r\n        let params = {\r\n            city: node.label,\r\n        };\r\n        const res = await project(params);\r\n        return resolve(res);\r\n        },\r\n\r\n        ///////////\r\n        handleNodeClick(data) \r\n        {\r\n            //console.log(data);\r\n\r\n            //新增一个属性\r\n            if(data.level==\"province\"){\r\n                //alert(\"province\")\r\n\r\n                this.center = {};\r\n                this.center = data.label;\r\n                this.boundaryname = data.label\r\n                this.zoom=8;\r\n\r\n            }\r\n            else if(data.level==\"city\"){\r\n\r\n                this.center = {};\r\n                this.center=data.label;\r\n                this.boundaryname = data.label\r\n                this.zoom = 10;\r\n                \r\n                //alert(\"city\")\r\n            }else if(data.level==\"project\"){\r\n\r\n                this.coordination.lat = data.lat;\r\n                this.coordination.lng = data.lng;\r\n                this.center = this.coordination;\r\n                this.zoom = 16;\r\n                //alert(\"project\")\r\n            }          \r\n     \r\n      },\r\n\r\n        // 点击点坐标赋值\r\n    lookDetail(marker){\r\n        marker.showFlag = true;\r\n        this.inforWindow = marker;\r\n\r\n        // this.inforWindow\r\n\r\n\r\n        //alert(this.infoWindow.lat,this.infoWindow.lng);\r\n\r\n    },\r\n    // 关闭弹窗\r\n    infoWindowClose(marker) {\r\n        marker.showFlag = false\r\n    },\r\n    // 打开弹窗\r\n    infoWindowOpen(marker) {\r\n        marker.showFlag = true\r\n    },\r\n\r\n    procount(){\r\n        dashprocount().then(res=>{\r\n\r\n            this.projectcount=res;\r\n        })\r\n    },\r\n    devcount(){\r\n        dashdevcount().then(res=>{\r\n\r\n            this.devicecount=res;\r\n        })\r\n    },\r\n    misscount(){\r\n\r\n        dashmisscount().then(res=>{\r\n            this.missioncount=res;\r\n        })\r\n    },\r\n    usercount(){\r\n        dashusercount().then(res=>{\r\n            this.usecount=res;\r\n        })\r\n    },\r\n    proselect(){\r\n        dashproselect().then(res=>[\r\n        this.markers=res\r\n        ])\r\n    },\r\n\r\n    getprovince(){\r\n        province().then(res=>{\r\n            this.treeData1=res;\r\n            //alert(this.treeData1);\r\n            \r\n        })\r\n    },\r\n\r\n////树状图加载\r\n////树状图加载\r\n\r\n        changeDate() {\r\n            const now = new Date().getTime();\r\n            this.data.forEach((item, index) => {\r\n                const date = new Date(now - (6 - index) * 86400000);\r\n                item.name = `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\r\n            });\r\n        },\r\n\r\n        getDate() {\r\n            let date = new Date();\r\n            let year = date.getFullYear(); // 年\r\n            let month = date.getMonth() + 1; // 月\r\n            let day = date.getDate(); // 日\r\n            let week = date.getDay(); // 星期\r\n            let weekArr = [ \"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\" ];\r\n            let hour = date.getHours(); // 时\r\n            hour = hour < 10 ? \"0\" + hour : hour; // 如果只有一位，则前面补零\r\n            let minute = date.getMinutes(); // 分\r\n            minute = minute < 10 ? \"0\" + minute : minute; // 如果只有一位，则前面补零\r\n            let second = date.getSeconds(); // 秒\r\n            second = second < 10 ? \"0\" + second : second; // 如果只有一位，则前面补零\r\n            this.nowDate = `${year}年${month}月${day}日 ${weekArr[week]}`;\r\n            this.nowTime = `${hour}时${minute}分${second}秒`;\r\n        },\r\n\r\n        currentTime(){\r\n            setInterval(()=>{\r\n                this.getDate()\r\n            },500)\r\n        },\r\n        handler ({BMap, map}) {\r\n        console.log(BMap, map)\r\n            this.center.lng = 116.404\r\n            this.center.lat = 39.915\r\n            this.zoom = 15\r\n        }\r\n    }\r\n};\r\n",null]}